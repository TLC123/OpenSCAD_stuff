 
 
 
    g= [[0, 58.6603], [6.1281, 61.1664], [13.149, 62.6027], [20.1871, 62.6227], [26.9034, 61.2657], [33.4675, 58.4015], [39.3824, 54.0048], [43.892, 48.6604], [47.1155, 42.3784], [48.8782, 35.5582], [49.2346, 28.6012], [48.3733, 21.3949], [46.7195, 14.6647], [44.5169, 8.05707], [41.8054, 1.60724], [38.3714, -4.72287], [34.3593, -10.3432], [29.2536, -15.6812], [23.9266, -19.7588], [17.3785, -23.2277], [10.7848, -25.312], [3.51717, -26.1161], [-3.43924, -25.3497], [-9.96021, -22.906], [-15.4931, -18.5675], [-18.7851, -12.4352], [-17.8723, -5.57383], [-12.0549, -2.07008], [-5.4502, -4.12027], [-1.10404, -9.67876], [0.198684, -16.677], [-1.65937, -23.5744], [-6.60518, -28.7634], [-10.4611, -34.3071], [-16.5818, -36.6863], [-23.2544, -34.2714], [-28.005, -29.1488], [-30.6436, -22.8863], [-31.4023, -15.7784], [-30.3111, -8.78733], [-27.6058, -2.13372], [-23.9082, 3.78909], [-20.9881, 10.2272], [-21.2364, 17.0203], [-21.4605, 24.2768], [-20.6407, 31.1363], [-18.6961, 37.7511], [-15.6141, 44.0104], [-11.2207, 49.9529], [-6.05874, 54.782]];
      for(i=g)  translate(i)cube(1);
 
     p=path($t);

    translate(p)cube(2);
 

function pathlength(i,j,p=.5)=
let(p1=subpath(i))
let(p2=subpath(j))
let(k=lerp(i,j,0.5))
let(pm=subpath(k))
let(pp=lerp(p1,p2,0.5))
let(err=norm(pm-pp))
err<p?norm(p1-p2):
pathlength(i,k)+pathlength(k,j)

;

function path(i)= 
let(d=pathlength(0,ceil(i)))
let(p= pathpart(0,ceil(i),i,d))
subpath(p )
;

function pathpart(l,u,i,d)=
abs(u-l)<0.001?l:
let(m=lerp(l,u,0.5))
let(v=pathlength(0,m,0.1) )
 

v<d*i?
pathpart(m,u,i,d)
:
pathpart(l,m,i,d)
;


function  subpath(i)=   (
[sin(i*360),cos(i*360)]*30*(1+sin(i*360*2)*0.5)
+[sin(i*360*2),cos(i*360*2)]*20*(1+sin(60+i*360*3)*0.5)
//+[sin(i*360*12),cos(i*360*15)]*20
//+[sin(i*360*4),cos(i*360*4)]*25
 )   ;
 function lerp(start,end,bias) = (end * bias + start * (1 - bias));
