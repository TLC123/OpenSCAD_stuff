//Quick render
Preview ="no";//[yes,no]
Mix = 0.5; //[-1:0.01:2]
Mutate = 0; //[0:0.01:1]
Parent1= [[[9.999, 9.999, 9.999], [0, -89.999, 0], [0, 0, 0], [0.149, 0.949, 0.749], [[0, -0.017, 0.999], [0, -0.515, 0.857], [0, -0.874, 0.484], [0, -0.999, -0.017], [0, -0.857, -0.515], [0, -0.484, -0.874], [0, 0.017, -0.999], [0, 0.515, -0.857], [0, 0.874, -0.484], [0, 0.999, 0.017], [0, 0.857, 0.515], [0, 0.484, 0.874]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.999, [[0.999, 5.999, 5.999], [0, -89.999, 0], [6.999, 7.999, 8.999], [0.249, 0.999, 0.749], [[0.067, 0.233, 0.734], [-0.045, 0.676, 0.82], [0.002, 1.034, 0.432], [0.079, 1.029, -0.467], [0.061, 0.746, -0.703], [-0.079, 0.296, -0.935], [-0.079, -0.296, -0.935], [0.061, -0.746, -0.703], [0.079, -1.029, -0.467], [0.002, -1.034, 0.432], [-0.045, -0.676, 0.82], [0.067, -0.233, 0.734]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0, [[0, 0.999, 0.999], [-57.025, -9.408, 0.141], [99.999, 0, 0], [0.149, 0.65, 0.749], [[0.102, 0.359, 1.032], [-0.005, 0.887, 0.722], [0.052, 1.163, 0.076], [0.172, 0.172, -0.926], [0.172, -0.172, -0.926], [0.052, -1.163, 0.076], [-0.005, -0.887, 0.722], [0.102, -0.359, 1.032]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.105, 0.364, 0.993], [-0.169, 0.882, -0.014], [-0.14, 1.024, -0.047], [-0.233, 0.463, -1.273], [-0.233, -0.463, -1.273], [-0.14, -1.024, -0.047], [-0.169, -0.882, -0.014], [-0.105, -0.364, 0.993]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.187, 0.285, 0.833], [-0.132, 0.879, 0.751], [-0.114, 0.704, -0.044], [-0.022, 0.589, -1.113], [-0.022, -0.589, -1.113], [-0.114, -0.704, -0.044], [-0.132, -0.879, 0.751], [0.187, -0.285, 0.833]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.079, 0.472, 0.765], [0.043, 1.101, 0.052], [-0.159, 0.793, -0.748], [0.207, 0.316, -0.754], [0.207, -0.316, -0.754], [-0.159, -0.793, -0.748], [0.043, -1.101, 0.052], [0.079, -0.472, 0.765]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.082, 0.389, 0.624], [-0.141, 1.057, 0.816], [0.089, 0.989, -0.198], [-0.168, 0.632, -1.114], [-0.168, -0.632, -1.114], [0.089, -0.989, -0.198], [-0.141, -1.057, 0.816], [-0.082, -0.389, 0.624]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.058, 0.198, 0.533], [0.12, 0.75, 0.578], [0.195, 0.74, -0.436], [-0.068, 0.148, -1.298], [-0.068, -0.148, -1.298], [0.195, -0.74, -0.436], [0.12, -0.75, 0.578], [0.058, -0.198, 0.533]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.78, 0.623], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.026, 0.4, 0.796], [-0.068, 1.041, -0.007], [0.138, 1.16, -0.09], [0.096, 0.453, -1.366], [0.096, -0.453, -1.366], [0.138, -1.16, -0.09], [-0.068, -1.041, -0.007], [0.026, -0.4, 0.796]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [0.999, [[3.999, 7.999, 7.999], [0, -14.999, 0], [6.999, 7.999, 8.999], [0.249, 0.999, 0.749], [[-0.026, 0.289, 1.012], [0.044, 0.715, 0.616], [-0.036, 0.985, 0.409], [-0.089, 0.903, -0.486], [-0.043, 0.783, -0.753], [-0.006, 0.348, -0.923], [-0.006, -0.348, -0.923], [-0.043, -0.783, -0.753], [-0.089, -0.903, -0.486], [-0.036, -0.985, 0.409], [0.044, -0.715, 0.616], [-0.026, -0.289, 1.012]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0, [[0, 0.999, 0.999], [-71.165, 14.031, -17.968], [99.999, 0, 0], [0.149, 0.65, 0.749], [[-0.071, 0.238, 1.072], [0.154, 0.702, 0.288], [-0.038, 1.064, -0.499], [-0.239, 0.557, -0.835], [-0.239, -0.557, -0.835], [-0.038, -1.064, -0.499], [0.154, -0.702, 0.288], [-0.071, -0.238, 1.072]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.199, 0.197, 1.186], [-0.154, 0.903, 0.716], [0.107, 1.048, 0.11], [-0.184, 0.615, -0.464], [-0.184, -0.615, -0.464], [0.107, -1.048, 0.11], [-0.154, -0.903, 0.716], [-0.199, -0.197, 1.186]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.033, 0.625, 0.46], [0.133, 0.834, 0.171], [-0.015, 0.789, -0.51], [0.105, 0.135, -0.583], [0.105, -0.135, -0.583], [-0.015, -0.789, -0.51], [0.133, -0.834, 0.171], [0.033, -0.625, 0.46]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.224, 0.274, 1.163], [0.161, 1.145, 0.028], [-0.236, 0.72, -0.423], [-0.095, 0.475, -1.382], [-0.095, -0.475, -1.382], [-0.236, -0.72, -0.423], [0.161, -1.145, 0.028], [-0.224, -0.274, 1.163]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.021, 0.532, 0.686], [0.203, 1.065, 0.661], [-0.177, 1.108, -0.818], [0.215, 0.552, -0.961], [0.215, -0.552, -0.961], [-0.177, -1.108, -0.818], [0.203, -1.065, 0.661], [-0.021, -0.532, 0.686]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.168, 0.502, 1.384], [0.07, 1.066, -0.085], [0.148, 1.002, -0.2], [-0.008, 0.571, -0.7], [-0.008, -0.571, -0.7], [0.148, -1.002, -0.2], [0.07, -1.066, -0.085], [-0.168, -0.502, 1.384]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 2.138, 2.705], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.22, 0.245, 1.221], [0.113, 0.829, 0.283], [0.214, 1.108, -0.494], [0.073, 0.551, -0.768], [0.073, -0.551, -0.768], [0.214, -1.108, -0.494], [0.113, -0.829, 0.283], [0.22, -0.245, 1.221]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [0.999, [[7.999, 11.999, 11.999], [0, 34.999, 0], [6.999, 7.999, 8.999], [0.249, 0.999, 0.749], [[0.066, 0.239, 0.974], [0.031, 0.786, 0.825], [-0.065, 0.882, 0.426], [-0.014, 1.014, -0.55], [-0.072, 0.718, -0.974], [-0.071, 0.212, -1.144], [-0.071, -0.212, -1.144], [-0.072, -0.718, -0.974], [-0.014, -1.014, -0.55], [-0.065, -0.882, 0.426], [0.031, -0.786, 0.825], [0.066, -0.239, 0.974]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.67, [[6.708, 3.683, 0.396], [-46.132, 3.087, 15.61], [99.999, 0, 0], [0.149, 0.65, 0.749], [[-0.15, 0.252, 0.482], [0.129, 1.038, 0.421], [0.007, 0.889, -0.581], [0.047, 0.258, -0.656], [0.047, -0.258, -0.656], [0.007, -0.889, -0.581], [0.129, -1.038, 0.421], [-0.15, -0.252, 0.482]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.67, [[6.708, 5.024, 3.012], [0, 10.062, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.024, 0.557, 0.701], [-0.042, 0.71, 0.627], [0.006, 0.87, -0.694], [-0.14, 0.253, -0.849], [-0.14, -0.253, -0.849], [0.006, -0.87, -0.694], [-0.042, -0.71, 0.627], [0.024, -0.557, 0.701]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.67, [[3.354, 7.037, 2.341], [0, -10.062, 0], [6.999, 7.999, 8.999], [0.217, 0.884, 0.749], [[0.072, 0.247, 0.838], [-0.12, 0.982, 0.181], [-0.076, 0.857, -0.581], [0.127, 0.396, -0.931], [0.127, -0.396, -0.931], [-0.076, -0.857, -0.581], [-0.12, -0.982, 0.181], [0.072, -0.247, 0.838]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.67, [[4.695, 3.683, 2.341], [0, -36.895, 0], [6.999, 7.999, 8.999], [0.217, 0.884, 0.749], [[-0.168, 0.491, 0.996], [0.009, 0.992, 0.671], [-0.145, 0.94, -0.458], [0.038, 0.265, -1.144], [0.038, -0.265, -1.144], [-0.145, -0.94, -0.458], [0.009, -0.992, 0.671], [-0.168, -0.491, 0.996]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.67, [[3.354, 7.037, 2.341], [0, -23.478, 0], [6.999, 7.999, 8.999], [0.217, 0.884, 0.749], [[-0.068, 0.4, 1.157], [-0.054, 0.826, 0.061], [0.119, 1.021, -0.489], [-0.142, 0.191, -1.167], [-0.142, -0.191, -1.167], [0.119, -1.021, -0.489], [-0.054, -0.826, 0.061], [-0.068, -0.4, 1.157]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.67, [[2.683, 3.683, 2.341], [0, -16.77, 0], [6.999, 7.999, 8.999], [0.217, 0.884, 0.749], [[-0.191, 0.28, 0.696], [-0.042, 1.153, 0.267], [0.102, 0.982, -0.366], [-0.182, 0.257, -0.763], [-0.182, -0.257, -0.763], [0.102, -0.982, -0.366], [-0.042, -1.153, 0.267], [-0.191, -0.28, 0.696]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.67, [[0.67, 2.346, 0.647], [0, -11.404, 0], [6.999, 7.999, 8.999], [0.149, 0.851, 0.749], [[-0.038, 0.457, 0.688], [0.089, 1.08, 0.76], [-0.164, 1, -0.398], [0.006, 0.436, -1.207], [0.006, -0.436, -1.207], [-0.164, -1, -0.398], [0.089, -1.08, 0.76], [-0.038, -0.457, 0.688]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [0.999, [[9.999, 11.999, 11.999], [0, 34.999, 0], [6.999, 7.999, 8.999], [0.249, 0.999, 0.749], [[0.038, 0.237, 0.714], [0.044, 0.696, 0.883], [-0.001, 0.877, 0.198], [0.04, 0.962, -0.349], [0.054, 0.629, -0.54], [0.066, 0.173, -0.684], [0.066, -0.173, -0.684], [0.054, -0.629, -0.54], [0.04, -0.962, -0.349], [-0.001, -0.877, 0.198], [0.044, -0.696, 0.883], [0.038, -0.237, 0.714]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.701, [[7.017, 3.807, 0.368], [-57.586, -4.307, 7.078], [99.999, 0, 0], [0.149, 0.65, 0.749], [[0.022, 0.28, 0.738], [-0.109, 0.785, 0.7], [-0.08, 1.066, -0.468], [-0.093, 0.427, -0.459], [-0.093, -0.427, -0.459], [-0.08, -1.066, -0.468], [-0.109, -0.785, 0.7], [0.022, -0.28, 0.738]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.701, [[7.017, 5.21, 3.105], [0, 10.526, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.042, 0.55, 1.188], [0.065, 0.865, 0.585], [-0.093, 0.86, -0.674], [0.021, 0.313, -0.722], [0.021, -0.313, -0.722], [-0.093, -0.86, -0.674], [0.065, -0.865, 0.585], [-0.042, -0.55, 1.188]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.701, [[3.508, 7.316, 2.403], [0, -10.526, 0], [6.999, 7.999, 8.999], [0.22, 0.895, 0.749], [[0.21, 0.248, 0.863], [-0.023, 1.086, 0.372], [0.005, 1.021, -0.625], [-0.03, 0.501, -1.185], [-0.03, -0.501, -1.185], [0.005, -1.021, -0.625], [-0.023, -1.086, 0.372], [0.21, -0.248, 0.863]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.701, [[4.912, 3.807, 2.403], [0, -38.598, 0], [6.999, 7.999, 8.999], [0.22, 0.895, 0.749], [[-0.145, 0.469, 1.129], [-0.092, 0.979, 0.552], [0.02, 1.157, -0.284], [0.079, 0.288, -1.125], [0.079, -0.288, -1.125], [0.02, -1.157, -0.284], [-0.092, -0.979, 0.552], [-0.145, -0.469, 1.129]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.701, [[3.508, 7.316, 2.403], [0, -24.562, 0], [6.999, 7.999, 8.999], [0.22, 0.895, 0.749], [[-0.047, 0.229, 0.702], [0.203, 1.075, 0.161], [0.026, 1.137, -0.747], [-0.003, 0.345, -1.337], [-0.003, -0.345, -1.337], [0.026, -1.137, -0.747], [0.203, -1.075, 0.161], [-0.047, -0.229, 0.702]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.701, [[2.807, 3.807, 2.403], [0, -17.544, 0], [6.999, 7.999, 8.999], [0.22, 0.895, 0.749], [[0.174, 0.384, 1.172], [-0.176, 0.804, 0.677], [0.009, 0.926, -0.446], [0.028, 0.287, -0.491], [0.028, -0.287, -0.491], [0.009, -0.926, -0.446], [-0.176, -0.804, 0.677], [0.174, -0.384, 1.172]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.701, [[0.701, 2.983, 0.858], [0, -11.93, 0], [6.999, 7.999, 8.999], [0.149, 0.86, 0.749], [[0.121, 0.29, 1.065], [0.049, 0.955, 0.441], [0.039, 1.005, -0.285], [0.011, 0.488, -0.855], [0.011, -0.488, -0.855], [0.039, -1.005, -0.285], [0.049, -0.955, 0.441], [0.121, -0.29, 1.065]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [0.999, [[4.999, 11.999, 12.999], [0, 24.999, 0], [6.999, 7.999, 8.999], [0.249, 0.999, 0.749], [[-0.009, 0.264, 0.727], [0.057, 0.693, 0.845], [-0.037, 0.95, 0.145], [-0.011, 0.959, -0.215], [-0.013, 0.782, -0.978], [0.033, 0.29, -1.251], [0.033, -0.29, -1.251], [-0.013, -0.782, -0.978], [-0.011, -0.959, -0.215], [-0.037, -0.95, 0.145], [0.057, -0.693, 0.845], [-0.009, -0.264, 0.727]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.999, [[4.999, 4.999, 4.999], [76.812, -118.469, -17.975], [99.999, 0, 0], [0.149, 0.65, 0.749], [[0, 0.266, 0.671], [0, 0.647, 0.25], [0, 0.648, -0.245], [0.001, 0.267, -0.634], [0.001, -0.267, -0.634], [0, -0.648, -0.245], [0, -0.647, 0.25], [0, -0.266, 0.671]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.653, [[21.534, 4.306, 2.999], [0, 29.999, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0, 0.268, 0.65], [0, 0.644, 0.283], [0, 0.646, -0.231], [-0.001, 0.268, -0.65], [-0.001, -0.268, -0.65], [0, -0.646, -0.231], [0, -0.644, 0.283], [0, -0.268, 0.65]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.653, [[22.534, 3.96, 1.999], [0, 34.999, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0, 0.269, 0.666], [0, 0.645, 0.23], [-0.001, 0.645, -0.262], [0, 0.267, -0.648], [0, -0.267, -0.648], [-0.001, -0.645, -0.262], [0, -0.645, 0.23], [0, -0.269, 0.666]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.653, [[21.534, 2.653, 1.999], [0, -10.566, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0, 0.268, 0.609], [0, 0.647, 0.282], [0, 0.645, -0.242], [0.001, 0.266, -0.641], [0.001, -0.266, -0.641], [0, -0.645, -0.242], [0, -0.647, 0.282], [0, -0.268, 0.609]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [3.306, [[12.534, 1.999, 1.999], [0, -54.007, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.001, 0.267, 0.649], [-0.001, 0.648, 0.252], [0, 0.647, -0.23], [0, 0.267, -0.628], [0, -0.267, -0.628], [0, -0.647, -0.23], [-0.001, -0.648, 0.252], [-0.001, -0.267, 0.649]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [4.613, [[13.534, 1.693, 1.822], [0, -27.74, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.001, 0.269, 0.619], [0, 0.647, 0.241], [-0.001, 0.646, -0.264], [0.001, 0.267, -0.623], [0.001, -0.267, -0.623], [-0.001, -0.646, -0.264], [0, -0.647, 0.241], [0.001, -0.269, 0.619]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [4.306, [[4.999, 2.251, 0.999], [0, -6.999, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0, 0.267, 0.631], [0, 0.646, 0.248], [0, 0.648, -0.253], [0, 0.265, -0.672], [0, -0.265, -0.672], [0, -0.648, -0.253], [0, -0.646, 0.248], [0, -0.267, 0.631]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [0.999, [[9.999, 14.999, 14.999], [0, 44.999, 0], [6.999, 7.999, 8.999], [0.249, 0.999, 0.749], [[-0.05, 0.346, 0.791], [0.009, 0.66, 0.905], [0.067, 1.024, 0.293], [-0.06, 0.992, -0.235], [-0.006, 0.626, -0.619], [0.035, 0.219, -1.005], [0.035, -0.219, -1.005], [-0.006, -0.626, -0.619], [-0.06, -0.992, -0.235], [0.067, -1.024, 0.293], [0.009, -0.66, 0.905], [-0.05, -0.346, 0.791]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.999, [[0.999, 0.1, 0.1], [9.673, -17.834, -19.894], [0, 0, 0], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.999, [[1.1, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.999, [[3.038, 7.977, 7.977], [0, 0, 0], [6.999, 7.999, 8.999], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.999, [[4.855, 12.61, 12.61], [0, 0, 0], [6.999, 7.999, 8.999], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.999, [[4.855, 12.61, 12.61], [0, 0, 0], [6.999, 7.999, 8.999], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.999, [[3.038, 8.977, 8.977], [0, 0, 0], [6.999, 7.999, 8.999], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.999, [[0.1, 0.1, 0.1], [0, 0, 0], [6.999, 7.999, 8.999], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [0.999, [[2.999, 1.999, 1.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.072, 0.323, 0.927], [0.058, 0.618, 0.68], [-0.029, 0.894, 0.173], [0.061, 0.959, -0.474], [0.042, 0.72, -0.612], [0.017, 0.223, -1.168], [0.017, -0.223, -1.168], [0.042, -0.72, -0.612], [0.061, -0.959, -0.474], [-0.029, -0.894, 0.173], [0.058, -0.618, 0.68], [-0.072, -0.323, 0.927]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0, [[0, 0.999, 0.999], [-70.175, -5.211, 5.278], [99.999, 0, 0], [0.149, 0.65, 0.749], [[-0.094, 0.418, 1.344], [0.07, 1.143, 0.753], [0.232, 0.991, -0.239], [-0.125, 0.354, -0.504], [-0.125, -0.354, -0.504], [0.232, -0.991, -0.239], [0.07, -1.143, 0.753], [-0.094, -0.418, 1.344]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.184, 0.341, 1.29], [0.167, 0.962, 0.33], [0.119, 0.922, -0.224], [-0.133, 0.229, -0.723], [-0.133, -0.229, -0.723], [0.119, -0.922, -0.224], [0.167, -0.962, 0.33], [0.184, -0.341, 1.29]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.003, 0.501, 1.353], [0.123, 1.079, 0.233], [0.104, 0.802, -0.13], [0.179, 0.375, -0.678], [0.179, -0.375, -0.678], [0.104, -0.802, -0.13], [0.123, -1.079, 0.233], [0.003, -0.501, 1.353]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.174, 0.596, 0.807], [-0.13, 0.976, -0.068], [0.054, 1.103, -0.685], [0.169, 0.222, -0.869], [0.169, -0.222, -0.869], [0.054, -1.103, -0.685], [-0.13, -0.976, -0.068], [0.174, -0.596, 0.807]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.051, 0.458, 1.078], [0.055, 0.875, 0.578], [0.087, 0.931, -0.738], [-0.037, 0.232, -0.734], [-0.037, -0.232, -0.734], [0.087, -0.931, -0.738], [0.055, -0.875, 0.578], [0.051, -0.458, 1.078]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.214, 0.548, 0.794], [-0.136, 0.894, 0.275], [-0.066, 0.688, 0.024], [0.119, 0.184, -1], [0.119, -0.184, -1], [-0.066, -0.688, 0.024], [-0.136, -0.894, 0.275], [-0.214, -0.548, 0.794]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0, [[0, 1.798, 1.289], [0, 0, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.201, 0.445, 0.919], [-0.203, 1.064, 0.762], [0.229, 1.09, -0.291], [0.128, 0.432, -0.732], [0.128, -0.432, -0.732], [0.229, -1.09, -0.291], [-0.203, -1.064, 0.762], [-0.201, -0.445, 0.919]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]]], [[0.999, [[4.999, 5.999, 5.999], [0, -89.999, 0], [6.999, 7.999, 8.999], [0.153, 0.662, 0.749], [[0.027, 0.286, 0.745], [0.081, 0.719, 0.635], [-0.024, 0.895, 0.381], [0.062, 1.043, -0.016], [-0.074, 0.75, -0.888], [-0.024, 0.248, -1.054], [-0.024, -0.248, -1.054], [-0.074, -0.75, -0.888], [0.062, -1.043, -0.016], [-0.024, -0.895, 0.381], [0.081, -0.719, 0.635], [0.027, -0.286, 0.745]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.051, [[0.397, 1.134, 1.109], [-44.82, -0.923, 5.324], [95.445, 0.391, 0.44], [0.149, 0.65, 0.749], [[0, 0.604, 1.398], [-0.109, 0.859, -0.037], [0.115, 1.044, -0.435], [-0.179, 0.362, -0.613], [-0.179, -0.362, -0.613], [0.115, -1.044, -0.435], [-0.109, -0.859, -0.037], [0, -0.604, 1.398]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.097, [[0.265, 1.153, 1.188], [0, -0.351, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.204, 0.348, 1.218], [-0.007, 0.961, 0.128], [0.119, 0.917, -0.342], [0.03, 0.569, -1.181], [0.03, -0.569, -1.181], [0.119, -0.917, -0.342], [-0.007, -0.961, 0.128], [0.204, -0.348, 1.218]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.067, [[1.198, 1.435, 1.378], [0, -2.659, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.207, 0.427, 0.489], [-0.031, 1.146, 0.408], [0.072, 1.131, -0.23], [0.198, 0.571, -0.481], [0.198, -0.571, -0.481], [0.072, -1.131, -0.23], [-0.031, -1.146, 0.408], [-0.207, -0.427, 0.489]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.051, [[0.229, 1.223, 1.212], [0, -1.023, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.188, 0.442, 0.662], [-0.128, 0.846, 0.642], [0.055, 1.069, -0.213], [-0.03, 0.347, -0.784], [-0.03, -0.347, -0.784], [0.055, -1.069, -0.213], [-0.128, -0.846, 0.642], [0.188, -0.442, 0.662]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.065, [[1.364, 1.36, 1.183], [0, 2.449, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.112, 0.185, 1.239], [-0.164, 1.093, 0.331], [0.175, 0.865, -0.59], [0.033, 0.434, -1.037], [0.033, -0.434, -1.037], [0.175, -0.865, -0.59], [-0.164, -1.093, 0.331], [-0.112, -0.185, 1.239]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.088, [[0.694, 1.101, 1.395], [0, -0.088, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.15, 0.234, 1.227], [0.089, 1.04, 0.79], [-0.115, 1.12, -0.822], [0.046, 0.62, -0.921], [0.046, -0.62, -0.921], [-0.115, -1.12, -0.822], [0.089, -1.04, 0.79], [-0.15, -0.234, 1.227]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.257, [[0.117, 0.689, 0.736], [0, 0.369, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.109, 0.284, 0.571], [0.147, 0.832, 0.263], [-0.186, 1.014, -0.81], [0.198, 0.276, -0.786], [0.198, -0.276, -0.786], [-0.186, -1.014, -0.81], [0.147, -0.832, 0.263], [0.109, -0.284, 0.571]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [0.999, [[1.999, 4.999, 7.999], [0, 4.999, 0], [6.999, 7.999, 8.999], [0.187, 0.782, 0.749], [[-0.065, 0.314, 1.172], [-0.069, 0.762, 0.667], [-0.045, 0.949, 0.277], [0.058, 0.922, -0.006], [0.055, 0.682, -0.833], [0.063, 0.328, -1.124], [0.063, -0.328, -1.124], [0.055, -0.682, -0.833], [0.058, -0.922, -0.006], [-0.045, -0.949, 0.277], [-0.069, -0.762, 0.667], [-0.065, -0.314, 1.172]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[1.358, [[8.955, 5.372, 5.131], [-48.502, -21.868, -32.176], [60.706, 3.38, 3.802], [0.149, 0.65, 0.749], [[0.182, 0.52, 0.823], [0, 0.814, 0.224], [-0.167, 0.852, -0.129], [-0.047, 0.282, -0.931], [-0.047, -0.282, -0.931], [-0.167, -0.852, -0.129], [0, -0.814, 0.224], [0.182, -0.52, 0.823]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.246, [[10.058, 4.994, 5.372], [0, 26.962, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.005, 0.306, 0.71], [-0.062, 0.942, 0.409], [0.052, 0.955, -0.147], [-0.046, 0.511, -1.074], [-0.046, -0.511, -1.074], [0.052, -0.955, -0.147], [-0.062, -0.942, 0.409], [0.005, -0.306, 0.71]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.098, [[45.699, 4.852, 3.18], [0, 5.348, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.089, 0.456, 1.265], [0.055, 0.921, -0.059], [0.08, 0.931, 0.006], [0.031, 0.342, -0.908], [0.031, -0.342, -0.908], [0.08, -0.931, 0.006], [0.055, -0.921, -0.059], [0.089, -0.456, 1.265]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.384, [[6.332, 2.72, 5.135], [0, -20.489, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.151, 0.308, 1.362], [0.02, 1.043, 0.381], [-0.134, 0.97, -0.367], [-0.025, 0.396, -1.054], [-0.025, -0.396, -1.054], [-0.134, -0.97, -0.367], [0.02, -1.043, 0.381], [0.151, -0.308, 1.362]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.263, [[42.562, 4.113, 4.811], [0, -3.576, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.09, 0.449, 0.815], [0.071, 0.991, 0.409], [0.029, 1.028, -0.063], [-0.194, 0.462, -0.609], [-0.194, -0.462, -0.609], [0.029, -1.028, -0.063], [0.071, -0.991, 0.409], [-0.09, -0.449, 0.815]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [2.281, [[10.891, 7.567, 3.379], [0, -6.448, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.085, 0.464, 1.325], [0.094, 0.803, 0.572], [-0.12, 1.026, -0.199], [-0.021, 0.423, -0.969], [-0.021, -0.423, -0.969], [-0.12, -1.026, -0.199], [0.094, -0.803, 0.572], [-0.085, -0.464, 1.325]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [3.273, [[3.613, 1.233, 2.215], [0, -18.528, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.118, 0.361, 0.681], [-0.055, 0.735, 0.447], [0.054, 0.762, -0.124], [0.057, 0.305, -0.457], [0.057, -0.305, -0.457], [0.054, -0.762, -0.124], [-0.055, -0.735, 0.447], [-0.118, -0.361, 0.681]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999], [[[22.066, 19.22, 19.702], [1.656, 6.409, 4.981]], [[[0, 0, 0], [0.1, 0.149, 0.1], [0.348, 0.349, 0.1], [0.65, 0.299, 0.092], [0.999, 0.1, 0]], [[0, 0, 0], [0.092, 0.149, -0.029], [0.328, 0.349, 0.033], [0.65, 0.299, 0.033], [0.999, 0.1, 0]]], [[[0, -0.186, 0], [0, 0.66, 0], [-0.077, 1.56, 0], [-0.238, 2.501, 0], [-0.431, 3.458, 0], [-0.495, 4.407, 0.002], [-0.402, 5.377, 0.013], [-0.138, 6.397, 0.029], [0.171, 7.275, 0.043]], [[0.434, -0.179, 0], [0.533, 0.678, 0], [1.587, 1.062, 0], [2.45, 1.762, 0], [2.981, 2.546, 0], [3.093, 3.562, 0], [2.916, 4.776, 0], [2.213, 6.031, 0], [0.546, 7.482, 0]]]]], [0.999, [[19.999, 19.999, 29.999], [0, -9.999, 0], [6.999, 7.999, 8.999], [0.203, 0.836, 0.749], [[-0.057, 0.174, 0.925], [0.003, 0.712, 0.834], [-0.074, 0.902, -0.019], [-0.067, 1, -0.523], [-0.011, 0.635, -0.61], [0.001, 0.205, -0.704], [0.001, -0.205, -0.704], [-0.011, -0.635, -0.61], [-0.067, -1, -0.523], [-0.074, -0.902, -0.019], [0.003, -0.712, 0.834], [-0.057, -0.174, 0.925]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[1.148, [[11.335, 6.336, 4.27], [-59.487, -21.683, -6.687], [66.376, 2.892, 3.253], [0.149, 0.65, 0.749], [[-0.099, 0.346, 0.723], [0.02, 0.961, 0.001], [0.064, 0.784, -0.078], [0.008, 0.252, -0.776], [0.008, -0.252, -0.776], [0.064, -0.784, -0.078], [0.02, -0.961, 0.001], [-0.099, -0.346, 0.723]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.011, [[11.917, 4.332, 2.485], [0, 36.819, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0, 0.44, 1.085], [-0.07, 0.796, 0.613], [0.128, 0.992, -0.642], [-0.082, 0.338, -0.794], [-0.082, -0.338, -0.794], [0.128, -0.992, -0.642], [-0.07, -0.796, 0.613], [0, -0.44, 1.085]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.092, [[44.264, 3.419, 2.964], [0, 8.34, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.027, 0.606, 0.579], [0.081, 1.001, 0.647], [0.079, 0.936, -0.684], [-0.135, 0.608, -1.071], [-0.135, -0.608, -1.071], [0.079, -0.936, -0.684], [0.081, -1.001, 0.647], [-0.027, -0.606, 0.579]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.02, [[5.977, 3.917, 2.706], [0, -29.903, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.112, 0.489, 0.596], [0.196, 0.849, 0.386], [-0.05, 1.045, -0.119], [0.062, 0.522, -0.536], [0.062, -0.522, -0.536], [-0.05, -1.045, -0.119], [0.196, -0.849, 0.386], [-0.112, -0.489, 0.596]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.229, [[54.38, 4.28, 2.626], [0, -13.583, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.037, 0.232, 1.184], [0.037, 0.936, 0.455], [-0.22, 0.765, -0.351], [-0.084, 0.46, -0.925], [-0.084, -0.46, -0.925], [-0.22, -0.765, -0.351], [0.037, -0.936, 0.455], [-0.037, -0.232, 1.184]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [3.419, [[10.272, 6.505, 2.348], [0, 0.88, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.193, 0.429, 0.806], [-0.118, 0.826, 0.769], [-0.166, 0.926, -0.647], [-0.012, 0.296, -1.049], [-0.012, -0.296, -1.049], [-0.166, -0.926, -0.647], [-0.118, -0.826, 0.769], [-0.193, -0.429, 0.806]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [2.575, [[3.782, 1.311, 2.576], [0, -13.393, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.12, 0.271, 1.191], [0.117, 0.761, 0.248], [0.216, 0.844, -0.476], [-0.042, 0.365, -0.821], [-0.042, -0.365, -0.821], [0.216, -0.844, -0.476], [0.117, -0.761, 0.248], [-0.12, -0.271, 1.191]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999], [[[120.658, 27.987, 45.952], [9.249, 3.755, -1.465]], [[[0, 0, 0], [0.1, 0.149, 0.1], [0.348, 0.349, 0.1], [0.65, 0.299, 0.05], [0.999, 0.1, 0]], [[0, 0, 0], [0.05, 0.149, -0.016], [0.206, 0.349, 0.039], [0.65, 0.299, 0.039], [0.999, 0.1, 0]]], [[[0, -0.09, 0], [0, 0.541, 0], [-0.177, 1.619, 0], [-0.357, 2.607, 0], [-0.538, 3.419, 0], [-0.539, 4.322, 0], [-0.448, 5.219, 0], [-0.268, 6.212, 0], [0.002, 7.202, 0]], [[0.36, -0.09, 0], [0.361, 0.542, 0], [0.731, 1.7, 0], [1.304, 2.863, 0], [1.369, 3.496, 0], [1.462, 4.218, 0], [1.372, 5.212, 0], [1.182, 6.207, 0], [0.805, 7.199, 0]]]]], [0.999, [[29.999, 23.999, 27.999], [0, -14.999, 0], [6.999, 7.999, 8.999], [0.214, 0.874, 0.749], [[-0.052, 0.302, 1.012], [0.015, 0.648, 0.456], [-0.056, 0.972, 0.31], [-0.086, 0.924, -0.091], [-0.07, 0.624, -0.486], [0.033, 0.187, -0.823], [0.033, -0.187, -0.823], [-0.07, -0.624, -0.486], [-0.086, -0.924, -0.091], [-0.056, -0.972, 0.31], [0.015, -0.648, 0.456], [-0.052, -0.302, 1.012]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[1.173, [[9.669, 5.748, 3.765], [-40.611, -21.694, -14.697], [78.672, 1.834, 2.063], [0.149, 0.65, 0.749], [[0.139, 0.579, 1.086], [-0.136, 1.029, 0.319], [-0.016, 0.858, -0.264], [-0.101, 0.375, -0.725], [-0.101, -0.375, -0.725], [-0.016, -0.858, -0.264], [-0.136, -1.029, 0.319], [0.139, -0.579, 1.086]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.222, [[14.416, 2.482, 3.575], [0, 46.382, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.167, 0.583, 0.63], [0.155, 0.913, 0.141], [-0.114, 1.014, -0.395], [-0.151, 0.356, -0.886], [-0.151, -0.356, -0.886], [-0.114, -1.014, -0.395], [0.155, -0.913, 0.141], [0.167, -0.583, 0.63]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.039, [[54.654, 2.475, 2.728], [0, 18.617, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.159, 0.455, 1.053], [-0.003, 1.098, 0.022], [0.203, 0.999, -0.692], [-0.014, 0.539, -1.009], [-0.014, -0.539, -1.009], [0.203, -0.999, -0.692], [-0.003, -1.098, 0.022], [-0.159, -0.455, 1.053]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.043, [[5.712, 3.229, 2.336], [0, -26.248, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.009, 0.364, 0.598], [0.043, 1.047, 0.295], [-0.139, 0.832, -0.68], [0.072, 0.502, -1.222], [0.072, -0.502, -1.222], [-0.139, -0.832, -0.68], [0.043, -1.047, 0.295], [-0.009, -0.364, 0.598]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.041, [[56.737, 2.583, 2.547], [0, -26.179, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.057, 0.411, 0.794], [-0.048, 0.966, 0.296], [-0.163, 0.812, -0.056], [0.115, 0.309, -0.869], [0.115, -0.309, -0.869], [-0.163, -0.812, -0.056], [-0.048, -0.966, 0.296], [0.057, -0.411, 0.794]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [3.483, [[10.062, 5.639, 2.513], [0, -13.442, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.07, 0.575, 1.047], [0.019, 0.754, 0.197], [-0.104, 0.787, 0.068], [-0.123, 0.573, -1.115], [-0.123, -0.573, -1.115], [-0.104, -0.787, 0.068], [0.019, -0.754, 0.197], [-0.07, -0.575, 1.047]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [2.399, [[4.531, 1.469, 2.215], [0, -15.913, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.12, 0.312, 1.105], [-0.102, 0.781, 0.762], [-0.187, 0.837, -0.223], [0.16, 0.537, -0.684], [0.16, -0.537, -0.684], [-0.187, -0.837, -0.223], [-0.102, -0.781, 0.762], [0.12, -0.312, 1.105]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [0.999, [[29.999, 18.999, 18.999], [0, 11.684, 0], [6.999, 7.999, 8.999], [0.196, 0.812, 0.749], [[0.076, 0.19, 0.824], [-0.009, 0.785, 0.634], [-0.009, 0.897, 0.055], [0.08, 0.96, -0.501], [0.042, 0.674, -0.462], [0.04, 0.325, -1.089], [0.04, -0.325, -1.089], [0.042, -0.674, -0.462], [0.08, -0.96, -0.501], [-0.009, -0.897, 0.055], [-0.009, -0.785, 0.634], [0.076, -0.19, 0.824]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.065, [[0.529, 1.301, 1.22], [-43.439, -19.888, -10.937], [95.883, 0.354, 0.398], [0.149, 0.649, 0.749], [[-0.032, 0.37, 0.544], [-0.101, 1.133, 0.303], [-0.215, 0.91, -0.231], [0.001, 0.615, -1.042], [0.001, -0.615, -1.042], [-0.215, -0.91, -0.231], [-0.101, -1.133, 0.303], [-0.032, -0.37, 0.544]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.066, [[0.477, 1.118, 1.333], [0, -1.086, 0], [6.999, 7.999, 8.999], [0.149, 0.649, 0.749], [[0.225, 0.593, 0.924], [0.226, 0.993, -0.08], [0.189, 0.821, 0.052], [-0.005, 0.238, -1.036], [-0.005, -0.238, -1.036], [0.189, -0.821, 0.052], [0.226, -0.993, -0.08], [0.225, -0.593, 0.924]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.079, [[2.414, 1.107, 1.18], [0, -1.828, 0], [6.999, 7.999, 8.999], [0.149, 0.649, 0.749], [[-0.03, 0.446, 0.973], [-0.12, 0.7, 0.743], [0.141, 0.747, -0.43], [-0.172, 0.452, -0.631], [-0.172, -0.452, -0.631], [0.141, -0.747, -0.43], [-0.12, -0.7, 0.743], [-0.03, -0.446, 0.973]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.066, [[0.231, 1.374, 1.25], [0, 0.154, 0], [6.999, 7.999, 8.999], [0.149, 0.649, 0.749], [[-0.225, 0.158, 1.387], [0.203, 1.164, 0.178], [-0.172, 0.845, -0.142], [0.147, 0.459, -1.14], [0.147, -0.459, -1.14], [-0.172, -0.845, -0.142], [0.203, -1.164, 0.178], [-0.225, -0.158, 1.387]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.078, [[1.743, 1.336, 1.394], [0, 2.213, 0], [6.999, 7.999, 8.999], [0.149, 0.649, 0.749], [[-0.007, 0.567, 1.022], [0.061, 0.986, 0.055], [0.183, 0.82, -0.514], [-0.083, 0.265, -0.897], [-0.083, -0.265, -0.897], [0.183, -0.82, -0.514], [0.061, -0.986, 0.055], [-0.007, -0.567, 1.022]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.054, [[0.399, 1.205, 1.284], [0, 0.67, 0], [6.999, 7.999, 8.999], [0.149, 0.649, 0.749], [[-0.205, 0.471, 0.821], [0.133, 1.032, 0.1], [0.199, 0.907, -0.5], [0.013, 0.512, -0.956], [0.013, -0.512, -0.956], [0.199, -0.907, -0.5], [0.133, -1.032, 0.1], [-0.205, -0.471, 0.821]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.228, [[0.095, 2.198, 1.809], [0, 0.782, 0], [6.999, 7.999, 8.999], [0.149, 0.649, 0.749], [[0.132, 0.61, 0.682], [0.177, 0.759, -0.087], [0.002, 1.081, -0.482], [-0.188, 0.32, -1.074], [-0.188, -0.32, -1.074], [0.002, -1.081, -0.482], [0.177, -0.759, -0.087], [0.132, -0.61, 0.682]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [2.999, [[29.999, 17.999, 7.999], [0, 37.735, 0], [6.999, 7.999, 8.999], [0.213, 0.87, 0.749], [[0.075, 0.181, 1.111], [0.02, 0.752, 0.581], [-0.006, 0.918, 0.14], [0.072, 0.92, -0.088], [0.018, 0.632, -0.893], [-0.059, 0.187, -0.904], [-0.059, -0.187, -0.904], [0.018, -0.632, -0.893], [0.072, -0.92, -0.088], [-0.006, -0.918, 0.14], [0.02, -0.752, 0.581], [0.075, -0.181, 1.111]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.176, [[0.665, 1.455, 1.679], [-59.334, -20.745, -5.103], [90.976, 0.776, 0.873], [0.149, 0.65, 0.749], [[0.203, 0.583, 0.537], [0.148, 0.977, 0.153], [-0.042, 0.957, -0.323], [-0.122, 0.537, -0.904], [-0.122, -0.537, -0.904], [-0.042, -0.957, -0.323], [0.148, -0.977, 0.153], [0.203, -0.583, 0.537]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.182, [[0.898, 1.555, 1.342], [0, -1.753, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.156, 0.322, 1.346], [-0.088, 0.893, 0.484], [-0.157, 0.749, -0.299], [-0.061, 0.405, -0.494], [-0.061, -0.405, -0.494], [-0.157, -0.749, -0.299], [-0.088, -0.893, 0.484], [-0.156, -0.322, 1.346]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.123, [[1.442, 1.262, 1.562], [0, -5.746, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.113, 0.563, 0.873], [-0.052, 0.887, -0.039], [0.008, 1.085, -0.681], [-0.017, 0.378, -0.842], [-0.017, -0.378, -0.842], [0.008, -1.085, -0.681], [-0.052, -0.887, -0.039], [0.113, -0.563, 0.873]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.137, [[0.735, 1.647, 1.764], [0, -1.768, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.222, 0.444, 0.952], [0.075, 0.797, -0.042], [-0.129, 0.985, -0.692], [0.226, 0.242, -0.556], [0.226, -0.242, -0.556], [-0.129, -0.985, -0.692], [0.075, -0.797, -0.042], [-0.222, -0.444, 0.952]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.101, [[2.47, 1.832, 1.287], [0, 4.206, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.062, 0.246, 1.104], [-0.049, 0.757, 0.346], [0.108, 1.001, -0.715], [0.029, 0.565, -0.874], [0.029, -0.565, -0.874], [0.108, -1.001, -0.715], [-0.049, -0.757, 0.346], [-0.062, -0.246, 1.104]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.191, [[1.297, 1.681, 1.407], [0, 0.575, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.15, 0.233, 0.603], [-0.159, 1.041, 0.167], [-0.143, 0.808, 0.016], [-0.059, 0.568, -0.527], [-0.059, -0.568, -0.527], [-0.143, -0.808, 0.016], [-0.159, -1.041, 0.167], [0.15, -0.233, 0.603]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.55, [[0.151, 2.904, 0.992], [0, -0.569, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.145, 0.464, 0.828], [-0.136, 0.919, -0.089], [0.108, 0.839, -0.466], [-0.079, 0.388, -0.907], [-0.079, -0.388, -0.907], [0.108, -0.839, -0.466], [-0.136, -0.919, -0.089], [0.145, -0.464, 0.828]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [2.999, [[19.999, 0.999, 0.999], [0, -17.708, 0], [6.999, 7.999, 8.999], [0.162, 0.695, 0.749], [[0.082, 0.199, 0.843], [-0.027, 0.669, 0.748], [-0.014, 0.964, 0.366], [-0.065, 1.014, -0.519], [0.037, 0.723, -0.437], [-0.038, 0.258, -0.826], [-0.038, -0.258, -0.826], [0.037, -0.723, -0.437], [-0.065, -1.014, -0.519], [-0.014, -0.964, 0.366], [-0.027, -0.669, 0.748], [0.082, -0.199, 0.843]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.02, [[0.114, 1.107, 1.121], [-77.075, -14.286, -2.25], [98.718, 0.11, 0.123], [0.149, 0.65, 0.75], [[0.193, 0.521, 1.293], [0.109, 1.059, 0.827], [-0.151, 0.979, 0.067], [-0.003, 0.292, -0.729], [-0.003, -0.292, -0.729], [-0.151, -0.979, 0.067], [0.109, -1.059, 0.827], [0.193, -0.521, 1.293]], [0.999, 1.999, 3, 3.999, 4.999, 6]], [0.999, 0.999, 0.999]], [0.02, [[0.113, 1.088, 1.06], [0, -0.296, 0], [7, 7.999, 9], [0.149, 0.65, 0.75], [[0.148, 0.144, 0.538], [0.123, 1.104, 0.523], [-0.076, 0.807, -0.127], [-0.103, 0.398, -1.082], [-0.103, -0.398, -1.082], [-0.076, -0.807, -0.127], [0.123, -1.104, 0.523], [0.148, -0.144, 0.538]], [0.999, 1.999, 3, 3.999, 4.999, 6]], [0.999, 0.999, 0.999]], [0.019, [[0.795, 1.091, 1.078], [0, -0.595, 0], [7, 7.999, 9], [0.149, 0.65, 0.75], [[-0.127, 0.466, 0.603], [-0.195, 0.802, 0.335], [0.129, 0.775, 0.008], [-0.206, 0.511, -1.036], [-0.206, -0.511, -1.036], [0.129, -0.775, 0.008], [-0.195, -0.802, 0.335], [-0.127, -0.466, 0.603]], [0.999, 1.999, 3, 3.999, 4.999, 6]], [0.999, 0.999, 0.999]], [0.014, [[0.045, 1.031, 1.055], [0, 0.072, 0], [7, 7.999, 9], [0.149, 0.65, 0.75], [[-0.067, 0.396, 0.771], [0, 0.777, 0.319], [-0.243, 1.122, -0.21], [0.172, 0.144, -0.718], [0.172, -0.144, -0.718], [-0.243, -1.122, -0.21], [0, -0.777, 0.319], [-0.067, -0.396, 0.771]], [0.999, 1.999, 3, 3.999, 4.999, 6]], [0.999, 0.999, 0.999]], [0.014, [[0.443, 1.08, 1.059], [0, 0.441, 0], [7, 7.999, 9], [0.149, 0.65, 0.75], [[0.121, 0.478, 0.631], [0.069, 0.899, 0.008], [0, 0.957, -0.841], [0.218, 0.225, -0.517], [0.218, -0.225, -0.517], [0, -0.957, -0.841], [0.069, -0.899, 0.008], [0.121, -0.478, 0.631]], [0.999, 1.999, 3, 3.999, 4.999, 6]], [0.999, 0.999, 0.999]], [0.026, [[0.089, 1.088, 1.103], [0, 0.243, 0], [7, 7.999, 9], [0.149, 0.65, 0.75], [[-0.087, 0.338, 0.927], [-0.236, 1.024, 0.742], [0.227, 1.084, -0.401], [0.229, 0.617, -1.067], [0.229, -0.617, -1.067], [0.227, -1.084, -0.401], [-0.236, -1.024, 0.742], [-0.087, -0.338, 0.927]], [0.999, 1.999, 3, 3.999, 4.999, 6]], [0.999, 0.999, 0.999]], [0.031, [[0.031, 1.188, 1.324], [0, -0.066, 0], [7, 7.999, 9], [0.149, 0.65, 0.75], [[0.111, 0.154, 0.834], [-0.239, 1.118, 0.515], [-0.195, 0.787, 0.022], [-0.075, 0.314, -0.752], [-0.075, -0.314, -0.752], [-0.195, -0.787, 0.022], [-0.239, -1.118, 0.515], [0.111, -0.154, 0.834]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]]]];//
Parent2=[[[9.999, 9.999, 9.999], [0, -89.999, 0], [0, 0, 0], [0.149, 0.949, 0.749], [[0, -0.017, 0.999], [0, -0.515, 0.857], [0, -0.874, 0.484], [0, -0.999, -0.017], [0, -0.857, -0.515], [0, -0.484, -0.874], [0, 0.017, -0.999], [0, 0.515, -0.857], [0, 0.874, -0.484], [0, 0.999, 0.017], [0, 0.857, 0.515], [0, 0.484, 0.874]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.999, [[0.999, 5.999, 5.999], [0, -89.999, 0], [6.999, 7.999, 8.999], [0.249, 0.999, 0.749], [[0.034, 0.271, 1.058], [-0.028, 0.692, 0.624], [0.051, 1.044, 0.016], [-0.022, 0.92, -0.153], [0.011, 0.717, -0.809], [-0.06, 0.237, -1.06], [-0.06, -0.237, -1.06], [0.011, -0.717, -0.809], [-0.022, -0.92, -0.153], [0.051, -1.044, 0.016], [-0.028, -0.692, 0.624], [0.034, -0.271, 1.058]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.486, [[4.12, 3.631, 3.334], [-47.423, -22.404, -1.291], [73.28, 2.298, 2.585], [0.149, 0.65, 0.749], [[-0.06, 0.494, 0.681], [-0.085, 1.01, 0.698], [-0.026, 0.836, -0.558], [-0.002, 0.493, -1.11], [-0.002, -0.493, -1.11], [-0.026, -0.836, -0.558], [-0.085, -1.01, 0.698], [-0.06, -0.494, 0.681]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.394, [[3.852, 1.961, 3.437], [0, -4.171, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.042, 0.384, 0.762], [0.089, 0.931, 0.269], [0.096, 1.003, -0.402], [0.068, 0.33, -0.731], [0.068, -0.33, -0.731], [0.096, -1.003, -0.402], [0.089, -0.931, 0.269], [0.042, -0.384, 0.762]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.367, [[10.161, 3.406, 2.384], [0, -13.813, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.044, 0.294, 0.826], [0.154, 0.989, 0.45], [-0.142, 0.878, -0.563], [-0.053, 0.405, -1.141], [-0.053, -0.405, -1.141], [-0.142, -0.878, -0.563], [0.154, -0.989, 0.45], [0.044, -0.294, 0.826]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.496, [[1.804, 2.526, 2.594], [0, -1.165, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.056, 0.333, 0.809], [-0.012, 0.946, 0.175], [-0.019, 0.731, -0.321], [-0.139, 0.178, -0.972], [-0.139, -0.178, -0.972], [-0.019, -0.731, -0.321], [-0.012, -0.946, 0.175], [0.056, -0.333, 0.809]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.498, [[6.336, 2.189, 1.811], [0, 14.472, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.003, 0.385, 0.816], [0.176, 0.995, 0.143], [0.032, 0.751, -0.132], [-0.017, 0.324, -1.043], [-0.017, -0.324, -1.043], [0.032, -0.751, -0.132], [0.176, -0.995, 0.143], [-0.003, -0.385, 0.816]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.642, [[4.389, 2.451, 1.949], [0, 3.073, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.142, 0.4, 0.826], [0.169, 1.128, 0.203], [0.046, 1.046, -0.534], [0.011, 0.432, -0.747], [0.011, -0.432, -0.747], [0.046, -1.046, -0.534], [0.169, -1.128, 0.203], [0.142, -0.4, 0.826]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.633, [[0.946, 1.582, 2.597], [0, -3.281, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.083, 0.482, 0.861], [-0.064, 0.844, 0.362], [-0.062, 1.022, -0.563], [0.187, 0.354, -1.016], [0.187, -0.354, -1.016], [-0.062, -1.022, -0.563], [-0.064, -0.844, 0.362], [0.083, -0.482, 0.861]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [1.827, [[12.061, 26.963, 6.325], [0, -10.112, 0], [6.999, 7.999, 8.999], [0.249, 0.999, 0.749], [[-0.017, 0.195, 0.824], [-0.001, 0.743, 0.857], [-0.034, 0.952, 0.067], [0.008, 1.023, -0.526], [-0.014, 0.698, -0.593], [-0.051, 0.316, -0.969], [-0.051, -0.316, -0.969], [-0.014, -0.698, -0.593], [0.008, -1.023, -0.526], [-0.034, -0.952, 0.067], [-0.001, -0.743, 0.857], [-0.017, -0.195, 0.824]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.256, [[2.567, 2.027, 0.768], [-55.493, 6.53, 1.682], [99.999, 0, 0], [0.149, 0.65, 0.749], [[-0.048, 0.398, 0.803], [-0.066, 0.76, 0.241], [-0.111, 0.955, -0.438], [0.068, 0.504, -0.735], [0.068, -0.504, -0.735], [-0.111, -0.955, -0.438], [-0.066, -0.76, 0.241], [-0.048, -0.398, 0.803]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.256, [[2.567, 2.54, 1.77], [0, 3.851, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.044, 0.362, 1.127], [-0.1, 0.899, 0.013], [-0.05, 0.896, -0.21], [0.084, 0.379, -1.06], [0.084, -0.379, -1.06], [-0.05, -0.896, -0.21], [-0.1, -0.899, 0.013], [-0.044, -0.362, 1.127]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.256, [[1.283, 3.31, 1.513], [0, -3.851, 0], [6.999, 7.999, 8.999], [0.175, 0.739, 0.749], [[0.001, 0.391, 1.115], [-0.04, 0.857, 0.451], [0.089, 0.888, -0.275], [0.032, 0.453, -1.006], [0.032, -0.453, -1.006], [0.089, -0.888, -0.275], [-0.04, -0.857, 0.451], [0.001, -0.391, 1.115]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.256, [[1.797, 2.027, 1.513], [0, -14.121, 0], [6.999, 7.999, 8.999], [0.175, 0.739, 0.749], [[0.005, 0.311, 0.875], [-0.023, 0.871, 0.303], [-0.107, 0.822, -0.259], [0.032, 0.441, -1.001], [0.032, -0.441, -1.001], [-0.107, -0.822, -0.259], [-0.023, -0.871, 0.303], [0.005, -0.311, 0.875]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.256, [[1.283, 3.31, 1.513], [0, -8.986, 0], [6.999, 7.999, 8.999], [0.175, 0.739, 0.749], [[0.125, 0.333, 0.98], [-0.115, 1.012, 0.112], [0.01, 0.955, -0.352], [-0.033, 0.423, -0.948], [-0.033, -0.423, -0.948], [0.01, -0.955, -0.352], [-0.115, -1.012, 0.112], [0.125, -0.333, 0.98]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.256, [[1.027, 2.027, 1.513], [0, -6.418, 0], [6.999, 7.999, 8.999], [0.175, 0.739, 0.749], [[0.117, 0.339, 0.841], [-0.066, 0.938, 0.199], [-0.016, 0.927, -0.351], [-0.116, 0.393, -0.647], [-0.116, -0.393, -0.647], [-0.016, -0.927, -0.351], [-0.066, -0.938, 0.199], [0.117, -0.339, 0.841]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.256, [[0.256, 1.61, 1.745], [0, -4.364, 0], [6.999, 7.999, 8.999], [0.149, 0.727, 0.749], [[-0.028, 0.553, 1.009], [-0.052, 0.933, 0.082], [0.036, 0.852, -0.459], [-0.068, 0.464, -1.029], [-0.068, -0.464, -1.029], [0.036, -0.852, -0.459], [-0.052, -0.933, 0.082], [-0.028, -0.553, 1.009]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [1.451, [[12.38, 29.638, 25.668], [0, 10.564, 0], [6.999, 7.999, 8.999], [0.249, 0.999, 0.749], [[0.038, 0.321, 0.767], [0.026, 0.682, 0.636], [-0.045, 1.022, 0.387], [0, 0.996, -0.338], [-0.003, 0.686, -0.565], [-0.019, 0.279, -0.945], [-0.019, -0.279, -0.945], [-0.003, -0.686, -0.565], [0, -0.996, -0.338], [-0.045, -1.022, 0.387], [0.026, -0.682, 0.636], [0.038, -0.321, 0.767]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.762, [[7.628, 4.051, 0.313], [-52.847, 6.105, 10.535], [99.999, 0, 0], [0.149, 0.65, 0.749], [[0.211, 0.405, 0.983], [-0.051, 0.795, 0.558], [-0.029, 0.862, -0.42], [-0.08, 0.438, -0.859], [-0.08, -0.438, -0.859], [-0.029, -0.862, -0.42], [-0.051, -0.795, 0.558], [0.211, -0.405, 0.983]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.762, [[7.628, 5.577, 3.288], [0, 11.443, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.08, 0.29, 0.709], [-0.086, 0.938, 0.094], [-0.138, 0.899, -0.374], [0.097, 0.459, -1.15], [0.097, -0.459, -1.15], [-0.138, -0.899, -0.374], [-0.086, -0.938, 0.094], [0.08, -0.29, 0.709]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.762, [[3.814, 7.865, 2.525], [0, -11.443, 0], [6.999, 7.999, 8.999], [0.226, 0.917, 0.749], [[-0.028, 0.299, 1.007], [-0.027, 0.859, 0.337], [0.108, 1.03, -0.526], [0.014, 0.46, -0.833], [0.014, -0.46, -0.833], [0.108, -1.03, -0.526], [-0.027, -0.859, 0.337], [-0.028, -0.299, 1.007]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.762, [[5.34, 4.051, 2.525], [0, -41.957, 0], [6.999, 7.999, 8.999], [0.226, 0.917, 0.749], [[-0.015, 0.28, 1.134], [0.07, 0.804, 0.197], [0.021, 0.985, -0.371], [-0.125, 0.352, -1.056], [-0.125, -0.352, -1.056], [0.021, -0.985, -0.371], [0.07, -0.804, 0.197], [-0.015, -0.28, 1.134]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.762, [[3.814, 7.865, 2.525], [0, -26.7, 0], [6.999, 7.999, 8.999], [0.226, 0.917, 0.749], [[0.041, 0.375, 0.738], [0.016, 0.896, 0.113], [0.091, 0.976, -0.205], [0.068, 0.467, -0.752], [0.068, -0.467, -0.752], [0.091, -0.976, -0.205], [0.016, -0.896, 0.113], [0.041, -0.375, 0.738]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.762, [[3.051, 4.051, 2.525], [0, -19.071, 0], [6.999, 7.999, 8.999], [0.226, 0.917, 0.749], [[-0.008, 0.473, 0.944], [-0.026, 1.024, 0.418], [0.153, 0.754, -0.536], [-0.191, 0.343, -0.837], [-0.191, -0.343, -0.837], [0.153, -0.754, -0.536], [-0.026, -1.024, 0.418], [-0.008, -0.473, 0.944]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.762, [[0.762, 2.762, 0.861], [0, -12.968, 0], [6.999, 7.999, 8.999], [0.149, 0.878, 0.749], [[-0.079, 0.343, 0.729], [-0.03, 0.947, 0.475], [0.008, 0.9, -0.398], [-0.011, 0.293, -1.089], [-0.011, -0.293, -1.089], [0.008, -0.9, -0.398], [-0.03, -0.947, 0.475], [-0.079, -0.343, 0.729]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [1.104, [[13.613, 27.243, 18.011], [0, 30.368, 0], [6.999, 7.999, 8.999], [0.249, 0.999, 0.749], [[-0.025, 0.185, 1.079], [-0.055, 0.675, 0.834], [-0.018, 0.963, 0.357], [0.016, 0.967, -0.449], [0.042, 0.729, -0.832], [0.014, 0.304, -0.966], [0.014, -0.304, -0.966], [0.042, -0.729, -0.832], [0.016, -0.967, -0.449], [-0.018, -0.963, 0.357], [-0.055, -0.675, 0.834], [-0.025, -0.185, 1.079]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[1.107, [[8.987, 5.263, 3.642], [-40.908, -8.81, -9.707], [68.424, 2.716, 3.055], [0.149, 0.65, 0.749], [[-0.107, 0.337, 0.803], [0.036, 0.964, 0.15], [0.135, 0.916, -0.252], [-0.003, 0.426, -1.152], [-0.003, -0.426, -1.152], [0.135, -0.916, -0.252], [0.036, -0.964, 0.15], [-0.107, -0.337, 0.803]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.011, [[6.657, 3.792, 3.129], [0, 3.468, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.071, 0.31, 1.072], [-0.032, 0.941, 0.265], [-0.055, 0.979, -0.346], [-0.029, 0.429, -0.979], [-0.029, -0.429, -0.979], [-0.055, -0.979, -0.346], [-0.032, -0.941, 0.265], [0.071, -0.31, 1.072]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.827, [[24.861, 5.425, 2.952], [0, -17.582, 0], [6.999, 7.999, 8.999], [0.181, 0.76, 0.749], [[-0.054, 0.381, 0.932], [0.015, 0.916, 0.081], [0.062, 0.925, -0.584], [-0.125, 0.428, -1.199], [-0.125, -0.428, -1.199], [0.062, -0.925, -0.584], [0.015, -0.916, 0.081], [-0.054, -0.381, 0.932]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.888, [[5.146, 4.961, 2.895], [0, -16.37, 0], [6.999, 7.999, 8.999], [0.181, 0.76, 0.749], [[0.067, 0.479, 1.094], [-0.012, 0.868, 0.518], [0.112, 0.801, -0.282], [0.041, 0.415, -1.095], [0.041, -0.415, -1.095], [0.112, -0.801, -0.282], [-0.012, -0.868, 0.518], [0.067, -0.479, 1.094]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.903, [[18.831, 4.726, 4.531], [0, -1.116, 0], [6.999, 7.999, 8.999], [0.181, 0.76, 0.749], [[-0.06, 0.461, 0.849], [0.02, 0.994, 0.469], [-0.024, 0.857, -0.395], [0.054, 0.3, -0.82], [0.054, -0.3, -0.82], [-0.024, -0.857, -0.395], [0.02, -0.994, 0.469], [-0.06, -0.461, 0.849]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.338, [[4.098, 4.686, 3.367], [0, -12.226, 0], [6.999, 7.999, 8.999], [0.181, 0.76, 0.749], [[0.051, 0.378, 0.909], [-0.039, 0.994, 0.556], [0.101, 0.952, -0.749], [-0.027, 0.312, -0.626], [-0.027, -0.312, -0.626], [0.101, -0.952, -0.749], [-0.039, -0.994, 0.556], [0.051, -0.378, 0.909]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [2.79, [[1.507, 2.133, 1.805], [0, -4.819, 0], [6.999, 7.999, 8.999], [0.149, 0.744, 0.749], [[-0.04, 0.358, 1.134], [0.04, 1.052, 0.605], [0.033, 0.902, -0.524], [-0.03, 0.442, -0.729], [-0.03, -0.442, -0.729], [0.033, -0.902, -0.524], [0.04, -1.052, 0.605], [-0.04, -0.358, 1.134]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [1.416, [[15.643, 23.974, 21.252], [0, 25.821, 0], [6.999, 7.999, 8.999], [0.249, 0.999, 0.749], [[-0.028, 0.232, 0.974], [0.051, 0.641, 0.6], [-0.027, 0.934, 0.312], [0, 0.932, -0.31], [-0.003, 0.714, -0.819], [0.046, 0.214, -1.161], [0.046, -0.214, -1.161], [-0.003, -0.714, -0.819], [0, -0.932, -0.31], [-0.027, -0.934, 0.312], [0.051, -0.641, 0.6], [-0.028, -0.232, 0.974]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.999, [[5.866, 4.999, 4.48], [32.825, -76.462, 4.532], [99.999, 0, 0], [0.149, 0.65, 0.749], [[-0.002, 0.306, 0.698], [-0.025, 0.72, 0.335], [-0.039, 0.726, -0.266], [0.009, 0.254, -0.67], [0.009, -0.254, -0.67], [-0.039, -0.726, -0.266], [-0.025, -0.72, 0.335], [-0.002, -0.306, 0.698]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.129, [[16.293, 3.085, 2.826], [0, 34.333, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.014, 0.312, 0.76], [-0.014, 0.726, 0.26], [-0.023, 0.693, -0.35], [0.027, 0.303, -0.622], [0.027, -0.303, -0.622], [-0.023, -0.693, -0.35], [-0.014, -0.726, 0.26], [0.014, -0.312, 0.76]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.129, [[24.92, 2.388, 1.999], [0, 34.999, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.031, 0.299, 0.717], [-0.031, 0.73, 0.192], [0.025, 0.653, -0.306], [0.042, 0.322, -0.681], [0.042, -0.322, -0.681], [0.025, -0.653, -0.306], [-0.031, -0.73, 0.192], [-0.031, -0.299, 0.717]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.129, [[14.56, 2.129, 1.999], [0, -18.991, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.011, 0.277, 0.675], [-0.018, 0.707, 0.269], [0.011, 0.652, -0.24], [-0.016, 0.304, -0.627], [-0.016, -0.304, -0.627], [0.011, -0.652, -0.24], [-0.018, -0.707, 0.269], [-0.011, -0.277, 0.675]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [2.085, [[16.653, 1.999, 1.999], [0, -44.338, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.027, 0.322, 0.762], [0.028, 0.705, 0.34], [0.032, 0.724, -0.293], [0.04, 0.252, -0.619], [0.04, -0.252, -0.619], [0.032, -0.724, -0.293], [0.028, -0.705, 0.34], [-0.027, -0.322, 0.762]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [2.968, [[8.813, 3.534, 2.48], [0, -12.728, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.021, 0.295, 0.7], [-0.006, 0.731, 0.228], [-0.016, 0.663, -0.308], [-0.005, 0.272, -0.679], [-0.005, -0.272, -0.679], [-0.016, -0.663, -0.308], [-0.006, -0.731, 0.228], [-0.021, -0.295, 0.7]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [3.085, [[4.999, 1.095, 0.965], [0, -8.733, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.013, 0.291, 0.646], [-0.016, 0.671, 0.232], [-0.028, 0.731, -0.342], [-0.038, 0.271, -0.7], [-0.038, -0.271, -0.7], [-0.028, -0.731, -0.342], [-0.016, -0.671, 0.232], [0.013, -0.291, 0.646]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [1.645, [[9.434, 18.999, 34.943], [0, -49.632, 0], [6.999, 7.999, 8.999], [0.249, 0.999, 0.749], [[-0.009, 0.336, 1.176], [0.033, 0.65, 0.846], [-0.026, 0.994, 0.272], [0.028, 0.955, -0.375], [-0.008, 0.726, -0.765], [-0.057, 0.263, -1.168], [-0.057, -0.263, -1.168], [-0.008, -0.726, -0.765], [0.028, -0.955, -0.375], [-0.026, -0.994, 0.272], [0.033, -0.65, 0.846], [-0.009, -0.336, 1.176]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.999, [[0.999, 0.1, 0.1], [3.011, -2.118, 16.839], [0, 0, 0], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.999, [[1.1, 0.999, 0.999], [0, 0, 0], [6.999, 7.999, 8.999], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.999, [[3.038, 7.977, 7.977], [0, 0, 0], [6.999, 7.999, 8.999], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.999, [[4.855, 12.61, 12.61], [0, 0, 0], [6.999, 7.999, 8.999], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.999, [[4.855, 12.61, 12.61], [0, 0, 0], [6.999, 7.999, 8.999], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.999, [[3.038, 8.977, 8.977], [0, 0, 0], [6.999, 7.999, 8.999], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.999, [[0.1, 0.1, 0.1], [0, 0, 0], [6.999, 7.999, 8.999], [0, 0.999, 0.999], [[0, 0.382, 0.923], [0, 0.923, 0.382], [0, 0.923, -0.382], [0, 0.382, -0.923], [0, -0.382, -0.923], [0, -0.923, -0.382], [0, -0.923, 0.382], [0, -0.382, 0.923]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [1.403, [[6.355, 3.815, 3.994], [0, 27.505, 0], [6.999, 7.999, 8.999], [0.2, 0.824, 0.749], [[-0.045, 0.27, 0.741], [0.042, 0.669, 0.681], [0.023, 0.998, 0.215], [-0.009, 0.982, -0.093], [0.006, 0.78, -0.575], [-0.01, 0.251, -0.968], [-0.01, -0.251, -0.968], [0.006, -0.78, -0.575], [-0.009, -0.982, -0.093], [0.023, -0.998, 0.215], [0.042, -0.669, 0.681], [-0.045, -0.27, 0.741]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.499, [[0.499, 0.554, 0.554], [-34.338, -1.496, 11.329], [49.999, 0, 0], [0.074, 0.824, 0.874], [[-0.003, 0.363, 0.942], [0.001, 0.901, 0.526], [0.055, 1.022, -0.482], [0.045, 0.336, -0.921], [0.045, -0.336, -0.921], [0.055, -1.022, -0.482], [0.001, -0.901, 0.526], [-0.003, -0.363, 0.942]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.499, [[0.503, 1.467, 1.467], [0, 0, 0], [6.999, 7.999, 8.999], [0.074, 0.824, 0.874], [[-0.055, 0.372, 0.957], [0.107, 0.943, 0.254], [-0.095, 0.868, -0.569], [0.026, 0.355, -0.839], [0.026, -0.355, -0.839], [-0.095, -0.868, -0.569], [0.107, -0.943, 0.254], [-0.055, -0.372, 0.957]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.499, [[1.519, 11.954, 11.954], [0, 0, 0], [6.999, 7.999, 8.999], [0.074, 0.824, 0.874], [[0.09, 0.431, 1.008], [0.03, 0.822, 0.268], [-0.089, 0.824, -0.247], [-0.078, 0.429, -0.775], [-0.078, -0.429, -0.775], [-0.089, -0.824, -0.247], [0.03, -0.822, 0.268], [0.09, -0.431, 1.008]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.266, [[2.427, 18.605, 18.605], [0, 0, 0], [6.999, 7.999, 8.999], [0.074, 0.824, 0.874], [[0.014, 0.43, 0.926], [0.025, 0.832, 0.411], [0.017, 0.995, -0.431], [-0.051, 0.355, -0.843], [-0.051, -0.355, -0.843], [0.017, -0.995, -0.431], [0.025, -0.832, 0.411], [0.014, -0.43, 0.926]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.266, [[2.427, 18.605, 18.605], [0, 0, 0], [6.999, 7.999, 8.999], [0.074, 0.824, 0.874], [[0.017, 0.426, 0.99], [-0.061, 0.997, 0.397], [-0.036, 0.928, -0.186], [0.032, 0.478, -0.85], [0.032, -0.478, -0.85], [-0.036, -0.928, -0.186], [-0.061, -0.997, 0.397], [0.017, -0.426, 0.99]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.499, [[1.519, 13.39, 13.39], [0, 0, 0], [6.999, 7.999, 8.999], [0.074, 0.824, 0.874], [[-0.066, 0.328, 0.996], [0.014, 0.932, 0.226], [-0.017, 0.989, -0.256], [-0.03, 0.482, -1.003], [-0.03, -0.482, -1.003], [-0.017, -0.989, -0.256], [0.014, -0.932, 0.226], [-0.066, -0.328, 0.996]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.499, [[0.05, 0.471, 0.795], [0, 0, 0], [6.999, 7.999, 8.999], [0.074, 0.824, 0.874], [[-0.101, 0.333, 0.981], [-0.053, 0.888, 0.511], [-0.039, 0.855, -0.237], [-0.02, 0.316, -0.845], [-0.02, -0.316, -0.845], [-0.039, -0.855, -0.237], [-0.053, -0.888, 0.511], [-0.101, -0.333, 0.981]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]]], [[1.427, [[2.999, 5.999, 5.999], [0, -89.999, 0], [6.999, 7.999, 8.999], [0.227, 0.92, 0.749], [[-0.053, 0.266, 0.946], [0.059, 0.787, 0.728], [0.044, 1.038, 0.304], [0.057, 0.948, -0.26], [0.016, 0.706, -0.757], [0.072, 0.281, -1.014], [0.072, -0.281, -1.014], [0.016, -0.706, -0.757], [0.057, -0.948, -0.26], [0.044, -1.038, 0.304], [0.059, -0.787, 0.728], [-0.053, -0.266, 0.946]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.874, [[7.02, 3.193, 2.532], [-59.667, -19.202, -12.262], [54.747, 3.892, 4.379], [0.149, 0.65, 0.749], [[0.045, 0.413, 1.335], [-0.051, 0.924, 0.391], [-0.153, 0.847, -0.6], [-0.11, 0.262, -0.945], [-0.11, -0.262, -0.945], [-0.153, -0.847, -0.6], [-0.051, -0.924, 0.391], [0.045, -0.413, 1.335]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.811, [[7.252, 3.09, 3.546], [0, -9.344, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.017, 0.255, 0.64], [-0.166, 0.907, 0.561], [0.046, 0.88, -0.286], [-0.126, 0.261, -1.173], [-0.126, -0.261, -1.173], [0.046, -0.88, -0.286], [-0.166, -0.907, 0.561], [-0.017, -0.255, 0.64]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.622, [[11.829, 3.93, 5.202], [0, -18.012, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.007, 0.329, 1.028], [-0.007, 1.156, 0.513], [-0.005, 0.861, -0.336], [-0.053, 0.47, -1.145], [-0.053, -0.47, -1.145], [-0.005, -0.861, -0.336], [-0.007, -1.156, 0.513], [-0.007, -0.329, 1.028]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.907, [[4.027, 5.129, 4.213], [0, 7.178, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.135, 0.312, 0.869], [0.009, 0.807, 0.623], [-0.121, 0.786, -0.284], [0.047, 0.407, -0.941], [0.047, -0.407, -0.941], [-0.121, -0.786, -0.284], [0.009, -0.807, 0.623], [-0.135, -0.312, 0.869]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.599, [[20.922, 2.615, 2.954], [0, 20.531, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.077, 0.477, 0.737], [0.062, 0.883, 0.375], [-0.069, 1.001, -0.075], [0.132, 0.45, -1.184], [0.132, -0.45, -1.184], [-0.069, -1.001, -0.075], [0.062, -0.883, 0.375], [-0.077, -0.477, 0.737]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.962, [[2.731, 5.354, 3.275], [0, 12.492, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.036, 0.29, 1.089], [0.072, 0.778, 0.229], [-0.058, 0.903, -0.373], [0.07, 0.392, -0.948], [0.07, -0.392, -0.948], [-0.058, -0.903, -0.373], [0.072, -0.778, 0.229], [0.036, -0.29, 1.089]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [3.793, [[0.788, 2.052, 1.967], [0, 8.701, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.144, 0.401, 1.25], [-0.061, 1.031, 0.473], [-0.012, 0.868, -0.164], [-0.057, 0.599, -0.811], [-0.057, -0.599, -0.811], [-0.012, -0.868, -0.164], [-0.061, -1.031, 0.473], [-0.144, -0.401, 1.25]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [2.313, [[21.643, 5.244, 22.407], [0, 3.916, 0], [6.999, 7.999, 8.999], [0.234, 0.945, 0.749], [[-0.035, 0.22, 0.991], [-0.003, 0.661, 0.795], [0.028, 0.885, 0.43], [0.027, 1.038, -0.32], [0.009, 0.707, -0.511], [0.008, 0.304, -0.909], [0.008, -0.304, -0.909], [0.009, -0.707, -0.511], [0.027, -1.038, -0.32], [0.028, -0.885, 0.43], [-0.003, -0.661, 0.795], [-0.035, -0.22, 0.991]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[1.297, [[6.028, 6.969, 4.754], [-43.996, -19.636, -21.165], [50.599, 4.249, 4.78], [0.149, 0.65, 0.749], [[0.188, 0.345, 0.691], [-0.091, 1.021, 0.422], [-0.076, 0.912, -0.426], [-0.021, 0.469, -0.883], [-0.021, -0.469, -0.883], [-0.076, -0.912, -0.426], [-0.091, -1.021, 0.422], [0.188, -0.345, 0.691]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.055, [[12.584, 3.344, 3.926], [0, 16.76, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.029, 0.276, 0.776], [-0.163, 0.889, 0.713], [-0.144, 0.828, -0.425], [-0.061, 0.436, -0.983], [-0.061, -0.436, -0.983], [-0.144, -0.828, -0.425], [-0.163, -0.889, 0.713], [-0.029, -0.276, 0.776]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.048, [[43.663, 5.415, 4.736], [0, -16.319, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.059, 0.373, 0.741], [0, 1.078, 0.096], [-0.007, 0.92, -0.011], [-0.132, 0.454, -0.693], [-0.132, -0.454, -0.693], [-0.007, -0.92, -0.011], [0, -1.078, 0.096], [-0.059, -0.373, 0.741]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.422, [[6.142, 2.7, 4.413], [0, -7.908, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.112, 0.478, 1.105], [-0.069, 0.969, 0.236], [-0.086, 0.976, -0.594], [-0.1, 0.513, -1.032], [-0.1, -0.513, -1.032], [-0.086, -0.976, -0.594], [-0.069, -0.969, 0.236], [-0.112, -0.478, 1.105]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.332, [[50.308, 3.426, 2.836], [0, 3.574, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.051, 0.239, 0.987], [0.049, 0.772, 0.338], [-0.021, 0.902, -0.417], [0.025, 0.487, -0.918], [0.025, -0.487, -0.918], [-0.021, -0.902, -0.417], [0.049, -0.772, 0.338], [0.051, -0.239, 0.987]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [2.182, [[7.325, 5.648, 3.399], [0, -1.795, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.057, 0.287, 0.916], [-0.027, 0.919, 0.703], [0.03, 0.933, -0.093], [-0.017, 0.416, -0.805], [-0.017, -0.416, -0.805], [0.03, -0.933, -0.093], [-0.027, -0.919, 0.703], [-0.057, -0.287, 0.916]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [4.281, [[3.34, 1.912, 1.797], [0, -17.668, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.027, 0.343, 0.811], [-0.049, 1.093, 0.251], [-0.11, 0.921, -0.308], [0.026, 0.436, -0.676], [0.026, -0.436, -0.676], [-0.11, -0.921, -0.308], [-0.049, -1.093, 0.251], [-0.027, -0.343, 0.811]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999], [[[0.1, 0.1, 0.1], [0, 0, undef]], [[[0, 0, 0], [0.1, 0.149, 0.1], [0.348, 0.349, 0.1], [0.65, 0.299, 0.05], [0.999, 0.1, 0]], [[0, 0, 0], [0.05, 0.149, -0.016], [0.204, 0.349, 0.04], [0.65, 0.299, 0.04], [0.999, 0.1, 0]]], [[[0, -0.088, 0], [0, 0.54, 0], [-0.178, 1.618, 0], [-0.358, 2.608, 0], [-0.54, 3.418, 0], [-0.54, 4.32, 0], [-0.449, 5.219, 0], [-0.27, 6.208, 0], [0, 7.198, 0]], [[0.358, -0.088, 0], [0.358, 0.54, 0], [0.718, 1.709, 0], [1.288, 2.878, 0], [1.348, 3.508, 0], [1.439, 4.229, 0], [1.348, 5.219, 0], [1.169, 6.208, 0], [0.809, 7.198, 0]]]]], [1.937, [[23.494, 24.984, 33.9], [0, -5.562, 0], [6.999, 7.999, 8.999], [0.191, 0.795, 0.749], [[0.01, 0.276, 1.03], [0.011, 0.726, 0.696], [0.006, 0.887, 0.085], [0.012, 0.969, -0.291], [-0.011, 0.645, -0.641], [-0.006, 0.287, -1.197], [-0.006, -0.287, -1.197], [-0.011, -0.645, -0.641], [0.012, -0.969, -0.291], [0.006, -0.887, 0.085], [0.011, -0.726, 0.696], [0.01, -0.276, 1.03]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[1.367, [[9.93, 5.057, 5.835], [-60.03, -26.22, -34.902], [44.435, 4.779, 5.377], [0.149, 0.65, 0.749], [[-0.047, 0.496, 0.603], [0.24, 0.725, 0.405], [0.063, 1.015, -0.396], [0.014, 0.384, -0.999], [0.014, -0.384, -0.999], [0.063, -1.015, -0.396], [0.24, -0.725, 0.405], [-0.047, -0.496, 0.603]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.492, [[10.444, 5.74, 3.418], [0, 14.44, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.047, 0.603, 1.143], [0.052, 1.047, 0.432], [-0.116, 0.916, -0.558], [-0.076, 0.412, -1.049], [-0.076, -0.412, -1.049], [-0.116, -0.916, -0.558], [0.052, -1.047, 0.432], [0.047, -0.603, 1.143]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.247, [[35.574, 6.097, 5.029], [0, -11.192, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0, 0.19, 0.611], [0.192, 0.847, 0.46], [-0.005, 0.787, -0.611], [-0.03, 0.342, -1.013], [-0.03, -0.342, -1.013], [-0.005, -0.787, -0.611], [0.192, -0.847, 0.46], [0, -0.19, 0.611]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.554, [[5.598, 3.363, 6.053], [0, -16.063, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.02, 0.501, 1.139], [-0.164, 0.827, 0.189], [-0.141, 0.97, -0.502], [0, 0.372, -0.984], [0, -0.372, -0.984], [-0.141, -0.97, -0.502], [-0.164, -0.827, 0.189], [0.02, -0.501, 1.139]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.205, [[33.949, 5.483, 3.182], [0, 15.05, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.035, 0.407, 0.874], [-0.059, 1.037, 0.224], [0.061, 1.098, -0.438], [0.07, 0.487, -1.122], [0.07, -0.487, -1.122], [0.061, -1.098, -0.438], [-0.059, -1.037, 0.224], [0.035, -0.407, 0.874]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [2.491, [[11.979, 4.315, 5.011], [0, 28.893, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.029, 0.401, 1.234], [-0.097, 0.919, 0.794], [-0.042, 0.898, -0.299], [0.104, 0.268, -0.918], [0.104, -0.268, -0.918], [-0.042, -0.898, -0.299], [-0.097, -0.919, 0.794], [0.029, -0.401, 1.234]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [3.902, [[3.597, 2.427, 2.235], [0, -19.294, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.051, 0.575, 0.919], [0.082, 0.909, 0.189], [0.061, 0.887, -0.304], [0.037, 0.332, -0.897], [0.037, -0.332, -0.897], [0.061, -0.887, -0.304], [0.082, -0.909, 0.189], [-0.051, -0.575, 0.919]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999], [[[0.1, 0.1, 0.1], [0, 0, undef]], [[[0, 0, 0], [0.1, 0.149, 0.1], [0.348, 0.349, 0.1], [0.65, 0.299, 0.05], [0.999, 0.1, 0]], [[0, 0, 0], [0.05, 0.149, -0.016], [0.204, 0.349, 0.04], [0.65, 0.299, 0.04], [0.999, 0.1, 0]]], [[[0, -0.088, 0], [0, 0.54, 0], [-0.178, 1.618, 0], [-0.358, 2.608, 0], [-0.54, 3.418, 0], [-0.54, 4.32, 0], [-0.449, 5.219, 0], [-0.27, 6.208, 0], [0, 7.198, 0]], [[0.358, -0.088, 0], [0.358, 0.54, 0], [0.718, 1.709, 0], [1.288, 2.878, 0], [1.348, 3.508, 0], [1.439, 4.229, 0], [1.348, 5.219, 0], [1.169, 6.208, 0], [0.809, 7.198, 0]]]]], [1.998, [[22.119, 16.793, 24.022], [0, -5.655, 0], [6.999, 7.999, 8.999], [0.157, 0.677, 0.749], [[0.031, 0.21, 0.97], [-0.072, 0.697, 0.848], [-0.036, 0.897, 0.151], [-0.001, 0.917, -0.258], [0, 0.715, -0.58], [0.059, 0.2, -0.991], [0.059, -0.2, -0.991], [0, -0.715, -0.58], [-0.001, -0.917, -0.258], [-0.036, -0.897, 0.151], [-0.072, -0.697, 0.848], [0.031, -0.21, 0.97]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[1.073, [[6.129, 3.985, 3.12], [-42.328, -23.02, -25.235], [39.208, 5.229, 5.883], [0.149, 0.65, 0.749], [[-0.012, 0.347, 0.894], [-0.026, 0.909, 0.513], [-0.071, 1.076, -0.382], [-0.063, 0.27, -0.84], [-0.063, -0.27, -0.84], [-0.071, -1.076, -0.382], [-0.026, -0.909, 0.513], [-0.012, -0.347, 0.894]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.357, [[9.349, 4.456, 3.946], [0, 8.504, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.039, 0.408, 1.049], [0.042, 1.001, 0.44], [0.026, 0.945, -0.152], [-0.084, 0.414, -1.097], [-0.084, -0.414, -1.097], [0.026, -0.945, -0.152], [0.042, -1.001, 0.44], [0.039, -0.408, 1.049]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.038, [[37.861, 5.313, 3.002], [0, -21.316, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.067, 0.371, 0.96], [-0.132, 0.983, 0.407], [-0.032, 1.03, -0.399], [-0.095, 0.441, -0.91], [-0.095, -0.441, -0.91], [-0.032, -1.03, -0.399], [-0.132, -0.983, 0.407], [0.067, -0.371, 0.96]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.12, [[2.858, 4.565, 6.142], [0, -9.519, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.125, 0.295, 1.073], [0.134, 0.983, 0.549], [0.057, 0.825, -0.452], [-0.098, 0.508, -0.903], [-0.098, -0.508, -0.903], [0.057, -0.825, -0.452], [0.134, -0.983, 0.549], [-0.125, -0.295, 1.073]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.273, [[41.722, 3.749, 3.4], [0, 29.908, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.059, 0.359, 1.09], [0.146, 0.832, 0.378], [-0.007, 0.873, -0.223], [0.104, 0.423, -0.872], [0.104, -0.423, -0.872], [-0.007, -0.873, -0.223], [0.146, -0.832, 0.378], [0.059, -0.359, 1.09]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.14, [[4.828, 5.516, 5.173], [0, -6.54, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.109, 0.27, 0.961], [0.102, 0.865, 0.608], [0.09, 1.095, -0.168], [-0.029, 0.37, -0.594], [-0.029, -0.37, -0.594], [0.09, -1.095, -0.168], [0.102, -0.865, 0.608], [0.109, -0.27, 0.961]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [3.459, [[1.889, 2.275, 1.979], [0, 4.316, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.058, 0.361, 0.748], [-0.136, 1.048, 0.302], [-0.05, 0.784, -0.4], [-0.018, 0.401, -0.857], [-0.018, -0.401, -0.857], [-0.05, -0.784, -0.4], [-0.136, -1.048, 0.302], [0.058, -0.361, 0.748]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [2.215, [[36.742, 27.287, 34.429], [0, -0.514, 0], [6.999, 7.999, 8.999], [0.205, 0.843, 0.749], [[-0.038, 0.29, 0.968], [0.058, 0.65, 0.681], [-0.027, 0.967, 0.385], [-0.004, 0.916, -0.279], [0.012, 0.725, -0.746], [-0.023, 0.217, -0.933], [-0.023, -0.217, -0.933], [0.012, -0.725, -0.746], [-0.004, -0.916, -0.279], [-0.027, -0.967, 0.385], [0.058, -0.65, 0.681], [-0.038, -0.29, 0.968]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.815, [[4.092, 2.15, 3.801], [-43.719, -11.164, -14.272], [55.46, 3.831, 4.31], [0.149, 0.65, 0.749], [[-0.059, 0.418, 1.148], [0.182, 1.103, 0.52], [0.136, 0.864, -0.385], [-0.093, 0.298, -1.192], [-0.093, -0.298, -1.192], [0.136, -0.864, -0.385], [0.182, -1.103, 0.52], [-0.059, -0.418, 1.148]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.725, [[6.252, 4.696, 3.586], [0, 6.867, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.079, 0.359, 0.912], [-0.095, 0.861, 0.563], [0.028, 0.976, -0.244], [0.063, 0.349, -1.298], [0.063, -0.349, -1.298], [0.028, -0.976, -0.244], [-0.095, -0.861, 0.563], [-0.079, -0.359, 0.912]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.582, [[19.3, 2.716, 3.829], [0, -24.984, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.007, 0.44, 0.794], [-0.017, 0.781, 0.103], [-0.093, 0.938, -0.59], [0.026, 0.484, -1.092], [0.026, -0.484, -1.092], [-0.093, -0.938, -0.59], [-0.017, -0.781, 0.103], [-0.007, -0.44, 0.794]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.584, [[2.761, 3.99, 3.07], [0, -3.495, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.058, 0.479, 0.889], [0.019, 0.848, 0.355], [-0.012, 0.848, -0.389], [0.122, 0.372, -0.974], [0.122, -0.372, -0.974], [-0.012, -0.848, -0.389], [0.019, -0.848, 0.355], [-0.058, -0.479, 0.889]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.661, [[19.065, 3.926, 3.249], [0, 23.388, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.145, 0.29, 0.928], [0.047, 1.048, 0.4], [-0.058, 1.06, -0.56], [-0.115, 0.515, -0.926], [-0.115, -0.515, -0.926], [-0.058, -1.06, -0.56], [0.047, -1.048, 0.4], [0.145, -0.29, 0.928]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.725, [[2.384, 3.36, 2.607], [0, 0.175, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.036, 0.376, 0.918], [0.162, 1.081, 0.341], [-0.052, 0.95, -0.367], [-0.071, 0.445, -0.64], [-0.071, -0.445, -0.64], [-0.052, -0.95, -0.367], [0.162, -1.081, 0.341], [-0.036, -0.376, 0.918]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [1.776, [[1.087, 2.438, 1.769], [0, 8.552, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.014, 0.372, 1.23], [0.041, 0.865, 0.562], [-0.082, 0.944, -0.358], [0.071, 0.4, -1.019], [0.071, -0.4, -1.019], [-0.082, -0.944, -0.358], [0.041, -0.865, 0.562], [0.014, -0.372, 1.23]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [3.179, [[30.979, 34.74, 29.201], [0, -103.341, 0], [6.999, 7.999, 8.999], [0.232, 0.937, 0.749], [[0.017, 0.297, 0.955], [0.013, 0.66, 0.848], [0.001, 1.008, 0.111], [0.019, 0.896, -0.156], [0.011, 0.714, -0.547], [0.001, 0.267, -0.934], [0.001, -0.267, -0.934], [0.011, -0.714, -0.547], [0.019, -0.896, -0.156], [0.001, -1.008, 0.111], [0.013, -0.66, 0.848], [0.017, -0.297, 0.955]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.531, [[2.879, 3.103, 2.409], [-54.83, -21.607, -21.818], [59.015, 3.525, 3.966], [0.149, 0.65, 0.749], [[0.107, 0.488, 1.001], [-0.07, 0.85, 0.384], [-0.086, 0.861, -0.408], [-0.126, 0.4, -0.76], [-0.126, -0.4, -0.76], [-0.086, -0.861, -0.408], [-0.07, -0.85, 0.384], [0.107, -0.488, 1.001]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.549, [[1.758, 3.293, 2.156], [0, -1.236, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.01, 0.481, 0.784], [-0.069, 0.885, 0.534], [-0.009, 0.972, -0.417], [-0.01, 0.406, -1.285], [-0.01, -0.406, -1.285], [-0.009, -0.972, -0.417], [-0.069, -0.885, 0.534], [-0.01, -0.481, 0.784]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.586, [[25.169, 2.144, 4.085], [0, -23.659, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.051, 0.547, 1.11], [-0.05, 0.79, 0.702], [-0.105, 0.927, -0.586], [-0.073, 0.417, -0.958], [-0.073, -0.417, -0.958], [-0.105, -0.927, -0.586], [-0.05, -0.79, 0.702], [0.051, -0.547, 1.11]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.699, [[3.062, 4.158, 3.827], [0, 1.347, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.163, 0.518, 1.145], [0.031, 0.854, 0.548], [-0.043, 1.08, -0.339], [0.018, 0.173, -0.854], [0.018, -0.173, -0.854], [-0.043, -1.08, -0.339], [0.031, -0.854, 0.548], [0.163, -0.518, 1.145]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.772, [[21.43, 2.43, 3.164], [0, 16.531, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.019, 0.333, 0.893], [0.056, 0.962, 0.317], [0.104, 1.035, -0.037], [-0.025, 0.372, -1.009], [-0.025, -0.372, -1.009], [0.104, -1.035, -0.037], [0.056, -0.962, 0.317], [0.019, -0.333, 0.893]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.608, [[2.645, 3.575, 4.43], [0, 3.689, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0.045, 0.428, 0.684], [-0.05, 0.886, 0.656], [0.012, 1.113, -0.632], [-0.15, 0.352, -0.702], [-0.15, -0.352, -0.702], [0.012, -1.113, -0.632], [-0.05, -0.886, 0.656], [0.045, -0.428, 0.684]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [2.83, [[1.216, 1.66, 1.314], [0, -4.332, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0, 0.354, 0.876], [-0.008, 0.803, 0.481], [0.173, 0.886, -0.549], [0.038, 0.256, -0.681], [0.038, -0.256, -0.681], [0.173, -0.886, -0.549], [-0.008, -0.803, 0.481], [0, -0.354, 0.876]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]], [2.572, [[12.041, 5.26, 30.114], [0, 9.076, 0], [6.999, 7.999, 8.999], [0.198, 0.818, 0.749], [[0.038, 0.27, 1.189], [0.023, 0.711, 0.722], [0.056, 0.955, 0.087], [0.019, 0.986, -0.109], [-0.021, 0.689, -0.788], [-0.033, 0.241, -0.867], [-0.033, -0.241, -0.867], [-0.021, -0.689, -0.788], [0.019, -0.986, -0.109], [0.056, -0.955, 0.087], [0.023, -0.711, 0.722], [0.038, -0.27, 1.189]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [[0.603, [[2.054, 4.635, 3.312], [-56.725, -10.548, -25.133], [61.076, 3.348, 3.766], [0.149, 0.65, 0.749], [[0.014, 0.401, 0.855], [-0.162, 0.85, 0.128], [0.037, 0.981, -0.58], [-0.131, 0.338, -0.953], [-0.131, -0.338, -0.953], [0.037, -0.981, -0.58], [-0.162, -0.85, 0.128], [0.014, -0.401, 0.855]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.764, [[5.764, 2.012, 2.768], [0, 7.326, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.032, 0.228, 0.995], [-0.011, 0.837, 0.45], [-0.092, 0.906, -0.66], [0.01, 0.378, -0.692], [0.01, -0.378, -0.692], [-0.092, -0.906, -0.66], [-0.011, -0.837, 0.45], [-0.032, -0.228, 0.995]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.703, [[9.073, 3.564, 2.91], [0, -14.561, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.058, 0.568, 1.056], [0.055, 1.12, 0.325], [-0.096, 0.786, -0.559], [-0.074, 0.383, -1.197], [-0.074, -0.383, -1.197], [-0.096, -0.786, -0.559], [0.055, -1.12, 0.325], [-0.058, -0.568, 1.056]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.652, [[1.915, 4.046, 3.594], [0, 5.348, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.145, 0.468, 0.578], [0.046, 0.97, 0.333], [-0.032, 0.868, -0.598], [0.152, 0.399, -0.932], [0.152, -0.399, -0.932], [-0.032, -0.868, -0.598], [0.046, -0.97, 0.333], [-0.145, -0.468, 0.578]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.542, [[10.241, 3.238, 3.744], [0, 16.496, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.043, 0.284, 0.963], [0.071, 0.891, 0.384], [0.163, 0.901, -0.465], [0.044, 0.469, -0.803], [0.044, -0.469, -0.803], [0.163, -0.901, -0.465], [0.071, -0.891, 0.384], [-0.043, -0.284, 0.963]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [0.743, [[3.984, 2.387, 4.229], [0, 5.297, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[0, 0.216, 0.817], [-0.112, 0.926, 0.404], [0.138, 1.058, -0.538], [0.125, 0.404, -1.111], [0.125, -0.404, -1.111], [0.138, -1.058, -0.538], [-0.112, -0.926, 0.404], [0, -0.216, 0.817]], [0.999, 1.999, 2.999, 3.999, 4.999, 5.999]], [0.999, 0.999, 0.999]], [2.345, [[1.078, 1.639, 2.341], [0, -4.814, 0], [6.999, 7.999, 8.999], [0.149, 0.65, 0.749], [[-0.131, 0.357, 0.869], [-0.03, 0.819, 0.62], [0.123, 0.889, -0.463], [-0.017, 0.414, -1.101], [-0.017, -0.414, -1.101], [0.123, -0.889, -0.463], [-0.03, -0.819, 0.62], [-0.131, -0.357, 0.869]], [undef, undef, undef, undef, undef, undef]], [0.999, 0.999, 0.999]]], [0.999, 0.999, 0.999]]]];//
/* [Hidden] */
RING = 12;
fork = [1, 1, 1];
//echo(str(" wings=",wing,"; "));
xgrove = [0.15, 0.65, 0.75]; //[0.5,0.5,0.5];
logrove = [0.25, 1, 0.75]; //[0.5,0.5,0.5];
grove = [0.15, 0.95, 0.75]; //[0.5,0.5,0.5];
nogrove = [0, 1, 1]; //[0.5,0.5,0.5];
ring = [
  [0, 1, 1],
  [0, 0, 1.5],
  [0, -1, 1],
  [0, -1, -1],
  [0, 1, -1]
];
tex = [1, 2, 3, 4, 5, 6]; //[["extparams"],["distmap -x,-y,-z,x,y,z"]];
//DNA = [base(),head(),ThoraxAbdomen()];
//DNA =deepmutate( [base(),head(),ThoraxAbdomen()],Mutate);
 DNA = deepmutate(lerp(Parent1, Parent2, Mix),Mutate);
for (x = [0: 100: 0]) {
  for (y = [0: 100: 0]) {
    translate([x * 3.5, y * 3.5, 0]) rotate([0, 0, 0]) MakeBug(DNA);
  }
}
echo(roundlist(DNA, 0.001));
//////////////////////MakeBug/////////////////////////////////////
module MakeBug(dna) {
    B = dna[0];
    Bm = flipring(B);
    ufdna1 = unfold(dna[1]);
    ufdna2 = unfold(dna[2]);
    H = populatelegs(populate(ufdna1));
    T = populatelegs(populate(ufdna2));
    rotate([0, 0, 180]) Ltrunk(Bm, H);
    Ltrunk(B, T);
  }
  ///////////////////End of MakeBug /////////////////////////////////////////
module Ltrunk(state, T) {
  Points = trunk2mesh(state, T, 0);
  core = trunk2core(T); *
  for (i = [0: len(Points) - 1]) {
    color("Black") translate(Points[i]) text(str(i), size = 1);
  }
  Faces = [
    for (x = [0: (len(Points) - 3) / RING], y = [0: RING - 1]) let (xx = x * RING)[xx + y, xx + (y + 1) % RING, xx + RING + (y + 1) % RING, xx + RING + y]
  ];
  trunk = cc([Points, Faces], 0);
 if(Preview=="yes"){ 
color([0.35, 0.5 / (5 + 1), 0.15] + rndc() * (0.5 / (5 / 10 + 1))) polyhedron(trunk[0],trunk[1]);
}else{ 
 hrender(trunk, core);
}
//trender(trunk);
    
lT1 = len(T) - 1;
  for (i = [0: max(0, lT1)]) {
    L = T[i][2];
    wing = (T[i][4]);
    if (wing != undef) {
      color([0.35, 0.5 / (i + 1), 0.15] + rndc() * (0.5 / (i / 10 + 1)))
      translate(T[i][1][2]) translate([0, 0, T[i][1][0][2] * 0.5]) {
        wingcv = sanitycheck(wing);
        //echo(wingcv);
translate([0, -T[i][1][0][2] * 0.5, 0]) rotate([i*6,-i*6,i*6])Makewing(wingcv);
        mirror([0, 1, 0]) 
translate([0, -T[i][1][0][2] * 0.5, 0])  rotate([i*6,-i*6,i*6])Makewing(wing);
      }
    }
    if (len(L) > 1) {
      LPoints = trunk2mesh(ringscale(T[i][2][4], [0.5, 0.5, 0.5]), L, 0);
      LFaces = concat(
        [
          for (ii = [0: max(0, len(LPoints) - 3)])[min(len(LPoints) - 1, max(0, ii)), min(len(LPoints) - 1, max(0, ii + 1)), min(len(LPoints) - 1, max(0, ii + 8))]
        ], [
          for (ii = [-6: max(-6, len(LPoints) - 9)])[min(len(LPoints) - 1, max(0, ii)), min(len(LPoints) - 1, max(0, ii + 8)), min(len(LPoints) - 1, max(0, ii + 7))]
        ]);
      append = i > len(T) - 3 ? cc([LPoints, LFaces], 1) : ([LPoints, LFaces]);
  
    translate(T[i][1][2]) 


rotate([0, 0, L[0][1][1][2]])
rotate([L[0][1][1][0], 0, 0])
rotate([0, T[i][1][1][1], 0])
rotate([-90,0,0])
rotate([0,0,0])        //hrender(append);
      //trender(append);
     color([0.35, 0.5 / (i + 1), 0.15] + rndc() * (0.5 / (i / 10 + 1)))  polyhedron(append[0],append[1]);
      ;
     mirror([0, 10]) translate(T[i][1][2])

rotate([0, 0, L[0][1][1][2]])
rotate([L[0][1][1][0], 0, 0])
rotate([0, T[i][1][1][1], 0])
rotate([-90,0,0])
rotate([0,0,0])

        //hrender(append);
      //trender(append);
     color([0.35, 0.5 / (i + 1), 0.15] + rndc() * (0.5 / (i / 10 + 1)))  polyhedron(append[0],append[1])
      ;;
    }
    //echo(i,T[i][1]);
  }
}
module line(p1, p2, d = [1, 1, 1]) {
  hull() {
    translate(p1) rotate([0, 90 + atan2(p2[0] - p1[0], p2[2] - p1[2]), 0]) scale([min(d[1] * 0.5, d[2]), d[1], d[2]]) rotate([0, 90, 0]) sphere(1, $fn = 8);
    translate(p2) rotate([0, atan2(p2[0] - p1[0]), 0], p2[2] - p1[2]) scale([min(d[1] * 0.75, d[2]), d[1] * 0.75, d[2]] * 0.75) rotate([0, 90, 0]) sphere(1, $fn = 8);
  }
}

function axflip(v) = [v[0], v[1], -v[2]];
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
function trunk2core(T, i = 0) = i == len(T) - 1 ?
  let (grove = T[i][1][3])
let (tr1 = T[i][1][2])
let (points = concat([tr1], [tr1]))
points: let (grove = T[i][1][3])
let (tr1 = T[i][1][2])
let (tr2 = lerp(T[i][1][2], T[min(len(T) - 1, i + 1)][1][2], 0.2))
let (tr3 = lerp(T[i][1][2], T[min(len(T) - 1, i + 1)][1][2], grove[2]), points = grove[1] < 0.7 ? concat([tr1], [tr2], [tr3], trunk2core(T, i + 1)) : concat([tr1], trunk2core(T, i + 1)))
points;
////////////////////////////////////////////////////////////
function trunk2mesh(state, T, i = -1) =
let (ringo = mirring(T[i][1][4])) i == len(T) - 1 ?
  let (grove = T[i][1][3])
let (s = T[i][1][0])
let (r = lerp(T[min(len(T) - 1, i + 1)][1][1][1], T[i][1][1][1], 0.5))
let (newring = ringtrans(ringrot(ringscale(ringo, s * grove[1]), r), T[i][1][2]), points = concat(newring))
points: i == 0 ?
  let (s = T[0][1][0])
let (newring = ringscale(ringo, axflip(s)), points = concat(newring, trunk2mesh(state, T, i + 1)))
points: let (s = T[i][1][0])
let (grove = T[i][1][3])
let (tr1 = T[i][1][2])
let (tr2 = lerp(T[i][1][2], T[min(len(T) - 1, i + 1)][1][2], 0.2))
let (tr3 = lerp(T[i][1][2], T[min(len(T) - 1, i + 1)][1][2], grove[2]))
let (r = lerp(T[min(len(T) - 1, i + 1)][1][1][1], T[i][1][1][1], 0.5))
let (newring1 = ringtrans(ringrot(ringscale(ringo, s * grove[1]), r), tr1))
let (newring = ringtrans(ringrot(ringscale(ringo, s), r), tr1))
let (newring2 = ringtrans(ringrot(ringscale(ringo, s), r), tr2))
let (newring3 = ringtrans(ringrot(ringscale(ringo, s), r), tr3), points = grove[1] < 0.7 ? concat(newring1, newring2, newring3, trunk2mesh(state, T, i + 1)) : concat(newring, trunk2mesh(state, T, i + 1))
  //concat( newring1,newring2,newring3,trunk2mesh(state,T,i+1))
)
points;
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
///////////////////////////////// Unroll and Populate Full bodyMap
function flipring(B) =
let (v = B[4])[B[0], B[1], B[2], B[3], [
  for (i = [0: len(v) - 1])[-v[i][0], v[i][1], v[i][2]]
], B[5]];

function populate(fdna, state = [
  [0, 0, 0],
  [0, 0, 0],
  [0, 0, 0]
], i = 0) =
let (l = len(fdna) - 1, nextstate = popadd(state, fdna[i]))(i == l) ? poppack(state, fdna[i]): concat(poppack(state, fdna[i]), populate(fdna, nextstate, i + 1));

function populatelegs(f) = [
  for (i = [0: len(f) - 1]) f[i][2] != [] ? [f[i][0], f[i][1], populate(f[i][2]), f[i][3], f[i][4]] : [f[i][0], f[i][1], f[i][2], f[i][3], f[i][4]]
];

function popadd(state, fdna) = (len(fdna) == 0) ? state: let (x = fdna[1][0][0], newdir = state[1] + fdna[1][1])[fdna[1][0], newdir, state[2] + [sin(newdir[1]) * x, 0, cos(newdir[1]) * x]];

function poppack(state, fdna) =
let (nextstate = popadd(state, fdna))[[fdna[0],
  [nextstate[0], nextstate[1], nextstate[2], fdna[1][3], fdna[1][4], fdna[1][5]], fdna[2], fdna[3], fdna[4]
]];

function unfold(fdna) = concat(repete(fdna, 0), repete(fdna, 1), repete(fdna, 2), repete(fdna, 3), repete(fdna, 4), repete(fdna, 5), repete(fdna, 6), repete(fdna, 7), repete(fdna, 8), repete(fdna, 9), repete(fdna, 10), repete(fdna, 11), repete(fdna, 12), repete(fdna, 13), repete(fdna, 14), repete(fdna, 15));

function repete(v, i) =
let (c = round(v[i][0]))
c > 0 ?
  let (l = max(0, len(v) - 1))
let (j = min(i + 1, l))[
  for (n = [1: c])[v[i][0], [let (temp = lerp(v[i][1][0], v[j][1][0], n / c))[v[i][1][0][0], temp[1], temp[2]], v[i][1][1] / c,
      v[i][1][2], lerp(v[i][1][3], v[j][1][3], n / c), lerp(v[i][1][4], v[j][1][4], n / c), //ring lerp(v[i][1][5],v[j][1][5],n/c),
    ], unfold(v[i][2]), //legs
    v[i][3], v[i][4] //wings
  ]] : [];
/////////////////////// Defining Default Body Parts Function s
function eye1() = [
  [1, [
    [1, 0.1, 0.1],
[0 + rnd(-20, 20), 0 + rnd(-20, 20), rnd(-20, 20)],
    [0, 0, 0], nogrove, Xring(8, 1, 0), tex
  ], fork],
  [1, [
    [1.1, 1, 1],
    [0, 0, 0],
    [7, 8, 9], nogrove, Xring(8, 1, 0), tex
  ], fork],
  [1, [
    [3.03893, 7.97785, 7.97785],
    [0, 0, 0],
    [7, 8, 9], nogrove, Xring(8, 1, 0), tex
  ], fork],
  [1, [
    [4.85528, 12.61057, 12.61057],
    [0, 0, 0],
    [7, 8, 9], nogrove, Xring(8, 1, 0), tex
  ], fork],
  [1, [
    [4.85528, 12.61057, 12.61057],
    [0, 0, 0],
    [7, 8, 9], nogrove, Xring(8, 1, 0), tex
  ], fork],
  [1, [
    [3.03893, 8.97785, 8.97785],
    [0, 0, 0],
    [7, 8, 9], nogrove, Xring(8, 1, 0), tex
  ], fork],
  [1, [
    [0.1, 0.1, 0.1],
    [0, 0, 0],
    [7, 8, 9], nogrove, Xring(8, 1, 0), tex
  ], fork]
];

function eye2() = [
  [1, [
    [1, 0.11, 0.11],
[0 + rnd(-20, 20), 0 + rnd(-20, 20), rnd(-20, 20)],
    [0, 0, 0], nogrove, Xring(8, 1, 0), tex
  ], fork],
  [1, [
    [1, 2, 2],
    [0, 0, 0],
    [7, 8, 9], nogrove, Xring(8, 1, 0), tex
  ], fork],
  [1, [
    [3.03893, 7.97785 * 3, 7.97785 * 3],
    [0, 0, 0],
    [7, 8, 9], nogrove, Xring(8, 1, 0), tex
  ], fork],
  [0.5, [
    [4.85528, 12.61057 * 3, 12.61057 * 3],
    [0, 0, 0],
    [7, 8, 9], nogrove, Xring(8, 1, 0), tex
  ], fork],
  [0.5, [
    [4.85528, 12.61057 * 3, 12.61057 * 3],
    [0, 0, 0],
    [7, 8, 9], nogrove, Xring(8, 1, 0), tex
  ], fork],
  [1, [
    [3.03893, 8.97785 * 3, 8.97785 * 3],
    [0, 0, 0],
    [7, 8, 9], nogrove, Xring(8, 1, 0), tex
  ], fork],
  [1, [
    [0.1, 0.1, 0.1],
    [0, 0, 0],
    [7, 8, 9], nogrove, Xring(8, 1, 0), tex
  ], fork]
];

function ant1() = [
  [1, [
    [5, 5, 5],
[50 + rnd(-20, 20), -90+ rnd(-20, 20)  , 10+ rnd(-20, 20)],
    [100, 0, 0], xgrove, Xring(8), tex
  ], fork],
  [1, [
    [15, 3, 3],
    [0, 30, 0],
    [7, 8, 9], xgrove, Xring(8), tex
  ], fork],
  [1, [
    [16, 2, 2],
    [0, 35, 0],
    [7, 8, 9], xgrove, Xring(8), tex
  ], fork],
  [1, [
    [15, 2, 2],
    [0, -15, 0],
    [7, 8, 9], xgrove, Xring(8), tex
  ], fork],
  [2, [
    [6, 2, 2],
    [0, -45, 0],
    [7, 8, 9], xgrove, Xring(8), tex
  ], fork],
  [2, [
    [7, 3, 3],
    [0, -15, 0],
    [7, 8, 9], xgrove, Xring(8), tex
  ], fork],
  [3, [
    [5, 1, 1],
    [0, -7, 0],
    [7, 8, 9], xgrove, Xring(8), tex
  ], fork]
];

function ant2() = [
  [1, [
    [5, 5, 5],
[90+ rnd(-20, 20), -120+ rnd(-20, 20), -40+ rnd(-20, 20)],
    [100, 0, 0], xgrove, Xring(8), tex
  ], fork],
  [2, [
    [25, 5, 3],
    [0, 30, 0],
    [7, 8, 9], xgrove, Xring(8), tex
  ], fork],
  [2, [
    [26, 5, 2],
    [0, 35, 0],
    [7, 8, 9], xgrove, Xring(8), tex
  ], fork],
  [2, [
    [25, 3, 2],
    [0, -15 + rnd(-20, 20), 0],
    [7, 8, 9], xgrove, Xring(8), tex
  ], fork],
  [4, [
    [16, 2, 2],
    [0, -45 + rnd(-20, 20), 0],
    [7, 8, 9], xgrove, Xring(8), tex
  ], fork],
  [6, [
    [17, 1, rnd(3, 0.5)],
    [0, -15 + rnd(-20, 20), 0],
    [7, 8, 9], xgrove, Xring(8), tex
  ], fork],
  [5, [
    [5, rnd(3, 0.5), 1],
    [0, -7, 0],
    [7, 8, 9], xgrove, Xring(8), tex
  ], fork]
];

function mandible() = [
  [1, [
    [10, 5, 0.1],
    [-55 + rnd(-20, 20), 0 + rnd(-20, 20),15+ rnd(-2, 2)],
    [100, 0, 0], xgrove, Xring(8, 1, 0.5), tex
  ], fork],
  [1, [
    [10, 7, 4],
    [0, 15, 0],
    [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
  ], fork],
  [1, [
    [5, 10, 3],
    [0, -15, 0],
    [7, 8, 9], logrove, Xring(8, 1, 0.5), tex
  ], fork],
  [1, [
    [7, 5, 3],
    [0, -55, 0],
    [7, 8, 9], logrove, Xring(8, 1, 0.5), tex
  ], fork],
  [1, [
    [5, 10, 3],
    [0, -35, 0],
    [7, 8, 9], logrove, Xring(8, 1, 0.5), tex
  ], fork],
  [1, [
    [4, 5, 3],
    [0, -25, 0],
    [7, 8, 9], logrove, Xring(8, 1, 0.5), tex
  ], fork],
  [1, [
    [1, 3, 0.5],
    [0, -17, 0],
    [7, 8, 9], grove, Xring(8, 1, 0.5), tex
  ], fork]
];

function bna(ii = 1) =
let (i = (ii - 5) * -7)[[1, [
  [10, 5, 2],
  [-60+ rnd(-20, 20),0+ rnd(-20, 20),0+ rnd(-20, 20)],
  [100, 0, 0], xgrove, Xring(8, 1, 0.5), tex
], fork], [1, [
  [15, 2, 2],
  [0, 55, 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [1, [
  [60, 2, 2],
  [0, 35, 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [1, [
  [5, 2, 2],
  [0, -35, 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [1, [
  [60, 2, 2],
  [0, -45, 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [rnd(2, 5), [
  [10, rnd(5, 8), 1],
  [0, rnd(-30, 55), 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [2, [
  [5, rnd(3, 0.5), rnd(3, 0.5)],
  [0, -17, 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork]];

function bna2(ii = 1) =
let (i = (ii - 5) * -7)[[0, [
  [0, 1, 1],
  [-60+ rnd(-20, 20), 0+ rnd(-20, 20), 0+ rnd(-20, 20)],
  [100, 0, 0], xgrove, Xring(8, 1, 0.5), tex
], fork], [0, [
  [0, 1, 1],
  [0, 0, 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [0, [
  [0, 1, 1],
  [0, 0, 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [0, [
  [0, 1, 1],
  [0, 0, 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [0, [
  [0, 1, 1],
  [0, 0, 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [0, [
  [0, 1, 1],
  [0, 0, 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [0, [
  [0, rnd(3, 0.5), rnd(3, 0.5)],
  [0, 0, 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork]];

function bna3(ii = 1) =
let (i = (ii - 5) * -7)[[rnd(2), [
  [rnd(3, 15), rnd(3, 10), rnd(3, 10)],
  [-40+ rnd(-20, 20),-40+ rnd(-20, 20),-40+ rnd(-20, 20)],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [rnd(2), [
  [rnd(3, 15), rnd(3, 10), rnd(3, 10)],
  [0, rnd(-30, 30), 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [rnd(2), [
  [rnd(13, 60), rnd(3, 10), rnd(3, 10)],
  [0, rnd(-60, -30), 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [rnd(2), [
  [rnd(3, 10), rnd(3, 10), rnd(3, 10)],
  [0, rnd(-30, 30), 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [rnd(2), [
  [rnd(13, 60), rnd(3, 10), rnd(3, 10)],
  [0, rnd(30, 60), 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [rnd(2), [
  [rnd(3, 15), rnd(3, 10), rnd(3, 10)],
  [0, rnd(-30, 30), 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), tex
], fork], [rnd(8), [
  [rnd(3, 1), rnd(3, 2), rnd(3, 2)],
  [0, rnd(-30, 30), 0],
  [7, 8, 9], xgrove, Xring(8, 1, 0.5), Xring(8, 1, 0.5), tex
], fork]];

function ThoraxAbdomen() = lerp(rndTA(), [
  [1, [
    [5, 6, 6],
    [0, -90, 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna2(1), bna3(1), rnd()), fork],
  [1, [
    [2, 5, 8],
    [0, 5, 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna(2), bna3(2), rnd()), fork, wingmix(1)],
  [1, [
    [20, 20, 30],
    [0, -10, 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna(3), bna3(3), rnd()), fork, wingmix(1)],
  [1, [
    [30, 24, 28],
    [0, -15, 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna(4), bna3(4), rnd()), fork],
  [1, [
    [30, 19, 19],
    [0, rnd(-15, 15), 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna2(5), bna3(5), rnd(0, 0.1)), fork],
  [3, [
    [30, 18, 8],
    [0, rnd(-50, 50), 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna2(6), bna3(6), rnd(0, 0.1)), fork],
  [3, [
    [20, 1, 1],
    [0, rnd(-25, 25), 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna2(7), bna3(7), rnd(0, 0.1)), fork]
], rnd(0.5,1));

function head() = lerp(hrndTA(), [
  [1, [
    [1, 6, 6],
    [0, -90, 0],
    [7, 8, 9], logrove, Xring(RING, 1, 0.3), tex
  ], bna2(1), fork],
  [1, [
    [4, 8, 8],
    [0, -15, 0],
    [7, 8, 9], logrove, Xring(RING, 1, 0.3), tex
  ], bna2(1), fork],
  [1, [
    [8, 12, 12],
    [0, 35, 0],
    [7, 8, 9], logrove, Xring(RING, 1, 0.3), tex
  ], lerp(mandible(), bna2(1), rnd(0, 0.5)), fork],
  [1, [
    [10, 12, 12],
    [0, 35, 0],
    [7, 8, 9], logrove, Xring(RING, 1, 0.3), tex
  ], lerp(mandible(), bna2(1), rnd(0, 0.5)), fork],
  [1, [
    [5, 12, 13],
    [0, 25, 0],
    [7, 8, 9], logrove, Xring(RING, 1, 0.3), tex
  ], lerp(ant2(), ant1(), rnd()), fork],
  [1, [
    [10, 15, 15],
    [0, 45, 0],
    [7, 8, 9], logrove, Xring(RING, 1, 0.3), tex
  ], lerp(eye2(), eye1(), 1), fork],
  [1, [
    [3, 2, 2],
    [0, 0, 0],
    [7, 8, 9], xgrove, Xring(RING, 1, 0.3), tex
  ], lerp(bna2(1), bna2(1), rnd()), fork]
], rnd(0.5,1));

function base() = [
  [10, 10, 10],
  [0, -90, 0],
  [0, 0, 0], grove, revXring(RING, 1, 0.3), tex
];

function rndTA() = [
  [rnd(4), [
    [rnd(1, 1), 6, 6],
    [0, -90, 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna3(1), lerp(bna2(1), bna(1), rnd()), rnd()), fork, ],
  [rnd(4), [
    [rnd(3, 60), rnd(3, 60), rnd(3, 60)],
    [0, rnd(-3, 3), 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna3(), lerp(bna2(2), bna(2), rnd()), rnd()), fork, lerp(wing3(), wingmix(), 0)],
  [rnd(4), [
    [rnd(3, 60), rnd(3, 60), rnd(3, 60)],
    [0, rnd(-3, 3), 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna3(3), lerp(bna2(3), bna(3), rnd()), rnd()), fork, lerp(wing3(), wingmix(), 0)],
  [rnd(5), [
    [rnd(3, 60), rnd(3, 60), rnd(3, 60)],
    [0, rnd(-10, 10), 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna3(4), lerp(bna2(4), bna(4), rnd()), rnd()), fork],
  [rnd(6), [
    [rnd(3, 60), rnd(3, 60), rnd(3, 60)],
    [0, rnd(-30, 30), 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna3(6), lerp(bna2(6), bna3(6), rnd(0.2)), rnd(0.8)), fork],
  [rnd(4), [
    [rnd(3, 60), rnd(3, 60), rnd(3, 60)],
    [0, rnd(-200, 60), 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna3(6), lerp(bna2(6), bna3(6), rnd(0.2)), rnd(0.8)), fork],
  [rnd(4), [
    [rnd(3, 20), rnd(3, 10), rnd(3, 60)],
    [0, rnd(-60, 60), 0],
    [7, 8, 9], lerp(xgrove, logrove, rnd()), Xring(RING, 1, 0.3), tex
  ], lerp(bna3(6), lerp(bna2(6), bna3(6), rnd(0.2)), rnd(0.8)), fork]
];

function hrndTA() = [
  [rnd(1), [
    [rnd(1, 1), 6, 6],
    [0, -90, 0],
    [7, 8, 9], logrove, Xring(RING, 1, 0.3), tex
  ], lerp(bna3(), lerp(bna2(), bna(), rnd()), rnd()), fork],
  [rnd(3), [
    [rnd(3, 30), rnd(3, 60), rnd(3, 60)],
    [0, rnd(-30, 30), 0],
    [7, 8, 9], logrove, Xring(RING, 1, 0.3), tex
  ], lerp(mandible(), bna2(), rnd()), fork],
  [rnd(3), [
    [rnd(3, 30), rnd(3, 60), rnd(3, 60)],
    [0, rnd(-30, 30), 0],
    [7, 8, 9], logrove, Xring(RING, 1, 0.3), tex
  ], lerp(mandible(), bna2(), rnd()), fork],
  [rnd(2), [
    [rnd(3, 30), rnd(3, 60), rnd(3, 60)],
    [0, rnd(-30, 30), 0],
    [7, 8, 9], logrove, Xring(RING, 1, 0.3), tex
  ], lerp(bna3(), lerp(bna2(), bna(), rnd()), rnd()), fork],
  [rnd(4), [
    [rnd(3, 30), rnd(3, 60), rnd(3, 60)],
    [0, rnd(-30, 30), 0],
    [7, 8, 9], logrove, Xring(RING, 1, 0.3), tex
  ], lerp(ant1(), lerp(ant2(), bna(), rnd()), rnd()), fork],
  [rnd(3), [
    [rnd(3, 30), rnd(3, 60), rnd(3, 60)],
    [0, rnd(-200, 60), 0],
    [7, 8, 9], logrove, Xring(RING, 1, 0.3), tex
  ], lerp(ant1(), lerp(eye1(), eye2(), 0), 1), fork],
  [rnd(2), [
    [rnd(8, 10), rnd(5, 7), rnd(5, 7)],
    [0, rnd(-60, 60), 0],
    [7, 8, 9], logrove, Xring(RING, 1, 0.3), tex
  ], lerp(eye2(), eye1(), rnd()), fork]
];

function wingmix(i) = (lerp(wing1(i), wing2(i), rnd()));
module Makewing(wings) {
    ////////////////////////////////module wing(wings) ///////////////////////////////////
    ///////////////////////////////////////////////////////////////////
    overskin = concat([let (ws = wings[2], wp = wings[1], p1 = ws[0][0], p2 = ws[1][0], d = len3(p1 - p2))[
        for (j = [0: len(wings[1][0]) - 1])[lerp(p1, p2, wp[0][j][0])[0], lerp(p1, p2, wp[0][j][0])[1], wp[0][j][2] * d * 4]]], [let (ws = wings[2], wp = wings[1], p1 = ws[0][1], p2 = ws[1][1], d = len3(p1 - p2))[
        for (j = [0: len(wings[1][0]) - 1])[lerp(p1, p2, wp[0][j][0])[0], lerp(p1, p2, wp[0][j][0])[1], wp[0][j][2] * d * 4]]],
      //mid
      [
        for (i = [2: len(wings[2][0]) - 2]) let (ws = wings[2], wp = wings[1], p1 = ws[0][i], p2 = ws[1][i], d = len3(p1 - p2))[
          for (j = [0: len(wings[1][0]) - 1])[lerp(p1, p2, wp[0][j][0])[0], lerp(p1, p2, wp[0][j][0])[1] + wp[0][j][1] * d, lerp(p1, p2, wp[0][j][0])[2] + wp[0][j][2] * d]]
      ], [let (i = len(wings[2][0]) - 1, ws = wings[2], wp = wings[1], p1 = ws[0][i], p2 = ws[1][i], d = len3(p1 - p2))[
        for (j = [0: len(wings[1][0]) - 1])[lerp(p1, p2, wp[0][j][0])[0], lerp(p1, p2, wp[0][j][0])[1] + wp[0][j][1] * d, lerp(p1, p2, wp[0][j][0])[2]]]]);
    ////////////////////////////////module wing(wings) ///////////////////////////////////
    ///////////////////////////////////////////////////////////////////
    underskin = concat([let (ws = wings[2], wp = wings[1], p1 = ws[0][0], p2 = ws[1][0], d = len3(p1 - p2))[
        for (j = [0: len(wp[1]) - 1])[lerp(p1, p2, wp[1][j][0])[0], lerp(p1, p2, wp[1][j][0])[1], -wp[0][j][2] * d * 4]]], [let (ws = wings[2], wp = wings[1], p1 = ws[0][1], p2 = ws[1][1], d = len3(p1 - p2))[
        for (j = [0: len(wp[1]) - 1])[lerp(p1, p2, wp[1][j][0])[0], lerp(p1, p2, wp[1][j][0])[1], -wp[0][j][2] * d * 4]]],
      //mid
      [
        for (i = [2: len(wings[2][0]) - 2]) let (ws = wings[2], wp = wings[1], p1 = ws[0][i], p2 = ws[1][i], d = len3(p1 - p2))[
          for (j = [0: len(wp[1]) - 1])[lerp(p1, p2, wp[1][j][0])[0], lerp(p1, p2, wp[1][j][0])[1] + wp[1][j][1] * d, lerp(p1, p2, wp[1][j][0])[2] + wp[1][j][2] * d]]
      ], [let (i = len(wings[2][0]) - 1, ws = wings[2], wp = wings[1], p1 = ws[0][i], p2 = ws[1][i], d = len3(p1 - p2))[
        for (j = [0: len(wings[1][1]) - 1])[lerp(p1, p2, wp[0][j][0])[0], lerp(p1, p2, wp[0][j][0])[1] + wp[0][j][1] * d, lerp(p1, p2, wp[0][j][0])[2]]]]);
    ////////////////////////////////module wing(wings) ///////////////////////////////////
    ///////////////////////////////////////////////////////////////////
rotate([0, 0, wings[0][1][2]]) 
rotate([wings[0][1][0], 0, 0]) 
rotate([0, wings[0][1][1], 0]) 

rotate([-45,0,0])
rotate([0,0,180])  

scale(wings[0][0]) {
      union() {
        for (i = [0: len(overskin) - 2]) {
          wingringbridge(overskin[i], overskin[i + 1]);
          color("Red") wingringbridge(underskin[i + 1], underskin[i]);
        }
        polyhedron(overskin[0], [
          [
            for (i = [0: len(overskin[0]) - 1]) i
          ]
        ]);
        polyhedron(underskin[0], [
          [
            for (i = [0: len(underskin[0]) - 1])(len(underskin[0]) - 1) - i
          ]
        ]);
      }
    }
    module wingringbridge(r1, r2) {
      n = len(r1);
      for (i = [0: 1]) {
        polyhedron([r1[i], r2[i], r2[i + 1], r1[i + 1]], [
          [0, 1, 3],
          [1, 2, 3]
        ]);
      }
      for (i = [2: n - 2]) {
        polyhedron([r1[i], r2[i], r2[i + 1], r1[i + 1]], [
          [0, 1, 2],
          [0, 2, 3]
        ]);
      }
    };
    /////////////end of/module wing(wings)///////////////////////////////////
  }
  //////////////////////// Specilaty Wing Functions /////////////////
  /*definedefaultwing1*/
function wing1(i = 0) = ([
  [
    [23.215, 20.95, 20.95],
    [0 + rnd(-10, 10), 0 + rnd(-10, 10), 0 + rnd(-10, 10)]
  ],
  [
    [
      [0, 0, 0],
      [0.1, 0.15, 0.1],
      [0.349, 0.35, 0.1],
      [0.65, 0.3, 0.1],
      [1, 0.1, 0]
    ],
    [
      [0, 0, 0],
      [0.1, 0.15, -0.032],
      [0.349, 0.35, 0.032],
      [0.65, 0.3, 0.03264],
      [1, 0.1, 0]
    ]
  ],
  deepmutate([
    [
      [0, -0.2, 0],
      [0, 0.7, 0],
      [-0.059375, 1.5875, 0],
      [-0.2125, 2.50619, 0],
      [-0.412438, 3.44975, 0],
      [-0.49975, 4.40587, 0.003125],
      [-0.384, 5.38413, 0.015625],
      [-0.1185, 6.38744, 0.034375],
      [0.2, 7.4, 0.05]
    ],
    [
      [0.45, -0.2, 0],
      [0.55, 0.7, 0],
      [1.69687, 0.98125, 0],
      [2.62188, 1.55625, 0],
      [3.16875, 2.41875, 0],
      [3.35625, 3.43125, 0],
      [3.22187, 4.5875, 0],
      [2.3375, 5.93125, 0],
      [0.5, 7.4, 0]
    ]
  ], 0.03)
]);
/*//definedefaultwing2*/
function wing2(i = 0) =
let (m = rnd(5, 25)) sanitycheck([
  [
    [rnd(1, 6) * m, rnd(1, 6) * m, rnd(1, 6) * m],
    [0 + rnd(-10, 10), -0 + rnd(-10, 10), 0 + rnd(-10, 10)]
  ],
  [
    [
      [0, 0, 0],
      [0.1, 0.15, 0.1],
      [0.349, 0.35, 0.1],
      [0.65, 0.3, 0.05],
      [1, 0.1, 0]
    ],
    [
      [0, 0, 0],
      [0.05, 0.15, -0.02],
      [0.2049, 0.35, 0.05],
      [0.65, 0.3, 0.05],
      [1, 0.05, 0]
    ]
  ],
  [
    [
      [0, -0.089, 0],
      [0, 0.54, 0],
      [-0.179, 1.619, 0],
      [-0.359, 2.609, 0],
      [-0.54, 3.419, 0],
      [-0.54, 4.32, 0],
      [-0.449, 5.219, 0],
      [-0.27, 6.209, 0],
      [0, 7.199, 0]
    ],
    [
      [0.359, -0.089, 0],
      [0.359, 0.54, 0],
      [0.719, 1.709, 0],
      [1.289, 2.879, 0],
      [1.349, 3.509, 0],
      [1.439, 4.229, 0],
      [1.349, 5.219, 0],
      [1.169, 6.209, 0],
      [0.809, 7.199, 0]
    ]
  ]
]);
/*//definedefaultwing3*/
function wing3(i = 0) =
let (m = 40) sanitycheck([
  [
    [0.1, 0.1, 0.1],
    [0, 0, -i]
  ],
  [
    [
      [0, 0, 0],
      [0.1, 0.15, 0.1],
      [0.349, 0.35, 0.1],
      [0.65, 0.3, 0.05],
      [1, 0.1, 0]
    ],
    [
      [0, 0, 0],
      [0.05, 0.15, -0.02],
      [0.2049, 0.35, 0.05],
      [0.65, 0.3, 0.05],
      [1, 0.05, 0]
    ]
  ],
  [
    [
      [0, -0.089, 0],
      [0, 0.54, 0],
      [-0.179, 1.619, 0],
      [-0.359, 2.609, 0],
      [-0.54, 3.419, 0],
      [-0.54, 4.32, 0],
      [-0.449, 5.219, 0],
      [-0.27, 6.209, 0],
      [0, 7.199, 0]
    ],
    [
      [0.359, -0.089, 0],
      [0.359, 0.54, 0],
      [0.719, 1.709, 0],
      [1.289, 2.879, 0],
      [1.349, 3.509, 0],
      [1.439, 4.229, 0],
      [1.349, 5.219, 0],
      [1.169, 6.209, 0],
      [0.809, 7.199, 0]
    ]
  ]
]);
/*/blurlengthprofile*/
function blur(inwing, c = 1) = c <= 0 ? inwing : let (wing = blur(inwing, c - 1))[wing[0], wing[1], [concat([wing[2][0][0]], [wing[2][0][1]], [
  for (i = [2: len(wing[2][0]) - 2])(wing[2][0][max(i - 1, 0)] * 0.5 + wing[2][0][i] + wing[2][0][min(i + 1, len(wing[2][0]) - 1)] * 0.5) / 2
], [wing[2][0][len(wing[2][0]) - 1]]), concat([wing[2][1][0]], [wing[2][1][1]], [
  for (i = [2: len(wing[2][1]) - 2])(wing[2][1][max(i - 1, 0)] * 0.5 + wing[2][1][i] + wing[2][1][min(i + 1, len(wing[2][1]) - 1)] * 0.5) / 2
], [wing[2][1][len(wing[2][1]) - 1]])]];
/*/randsvector*0.1inZ*/
function w3rnd(c) = [rands(-1, 1, 1)[0] * c, rands(-1, 1, 1)[0] * c * 0.1, rands(-1, 1, 1)[0]] * c; /*/checkcross-profilesounderskinislowerthaoverskin*/
function
sanitycheck(v) = [v[0],
  [v[1][0],
    [let (l = len(v[1][1]) - 1)
      for (i = [0: l])[i == 0 || i == l ? v[1][0][i][0] : v[1][1][i][0], i == 0 || i == l ? v[1][0][i][1] : v[1][1][i][1], i == 0 || i == l ? v[1][0][i][2] : min(v[1][1][i][2], v[1][0][i][2]) * 0.8]
    ]
  ], v[2]
]; /*roundeveryiteminanestedlisttoselectedprecition*/
function roundlist(v, r = 1) = len(v) == undef ? v - (v % r) : len(v) == 0 ? [] : [
  for (i = [0: len(v) - 1]) roundlist(v[i], r)
]; /*multiplyeveryiteminanestedlistbyselecteddeviance*/
function deepmutate(v, r = 0.3) = len(v) == undef ? v * rnd(1 - r, 1 + r) : len(v) == 0 ? [] : [
  for (i = [0: len(v) - 1]) deepmutate(v[i], r)
];
///////////////// Common functions //////////////////////////////
/////////////////////////////////////Common
function intrnd(a = 0, b = 1) = round((rands(min(a, b), max(a, b), 1)[0]));

function rndc() = [rands(0, 1, 1)[0], rands(0, 1, 1)[0], rands(0, 1, 1)[0]];

function lerp(start, end, bias) = (end * bias + start * (1 - bias));

function len3(v) = len(v) == 2 ? sqrt(pow(v[0], 2) + pow(v[1], 2)) : sqrt(pow(v[0], 2) + pow(v[1], 2) + pow(v[2], 2));

function rnd(a = 0, b = 1) = (rands(min(a, b), max(a, b), 1)[0]);

function rndR() = [rands(0, 360, 1)[0], rands(0, 360, 1)[1], rands(0, 360, 1)[0]];

function ringtrans(v, t) = [
  for (i = [0: len(v) - 1])[v[i][0] + t[0], v[i][1] + t[1], v[i][2] + t[2]]
];

function Xring(x = 8, r = 0.7, kaos = 0.05) = mirring([
  for (i = [(360 / x) * 0.5: 360 / x: 359])[0, sin(i) * r, cos(i) * r] + v3rnd(kaos)
]);

function revXring(x = 8, r = 1, ) = [
  for (i = [359: -360 / x: (360 / x) * 0.5])[0, sin(i) * r, cos(i) * r]
];

function ringrot(r = [
  [0, 0, 0]
], v) = [
  for (i = [0: len(r) - 1]) let (inx = r[i][0], iny = r[i][1], inz = r[i][2])[inx * sin(v) - inz * cos(v), iny, inx * cos(v) + inz * sin(v)]
];

function ringscale(v, s) = [
  for (i = [0: len(v) - 1])[v[i][0] * s[0], v[i][1] * s[1], v[i][2] * s[2]]
];

function mirring(ring) =
let (n = floor((len(ring) - 1) / 2))
concat(
  [
    for (i = [0: n]) ring[i]
  ], [
    for (i = [0: n])[ring[n - i][0], -ring[n - i][1], ring[n - i][2]]
  ]);

function avrg(v) = sumv(v, len(v) - 1) / len(v);

function sumv(v, i, s = 0) = (i == s || i == undef ? v[i] : v[i] + sumv(v, i - 1, s));
module trender(t) {
  C0 = (un(rndc()) + [2, 0, 0]);
  C1 = (un(rndc()) + [2, 2, 0]);
  C2 = (un(rndc()) + [0, 2, 2]);
  for (i = [0: max(0, len(t[1]) - 1)]) {
    n = un(p2n(t[0][t[1][i][0]], t[0][t[1][i][1]], t[0][t[1][i][2]]));
    color(un((C0 * abs(n[0]) + C1 * abs(n[1]) + C2 * abs(n[2]) + [1, 1, 1] * abs(n[2])) / 4)) polyhedron(t[0], [t[1][i]]);
  }
}
module hrender(t, core) {
    points = concat(t[0], core);
    cl = len(core);
    tl = max(0, len(t[1]));
    pl = len(t[0]);
    npl = len(points) - 1;
    C0 = (un(rndc()) + [2, 0, 0]);
    C1 = (un(rndc()) + [2, 2, 0]);
    C2 = (un(rndc()) + [0, 2, 2]);
    for (i = [0: tl - 1 - RING]) {
      n = un(p2n(t[0][t[1][i][0]], t[0][t[1][i][1]], t[0][t[1][i][2]]));
      first = min(cl - 1, max(1, ceil((cl / tl) * i) - 1));
      last = min(cl - 1, max(1, ceil((cl / tl) * i)));
      clip = [concat(t[1][i][0], t[1][i][1], [min(npl, first + pl)]),
        concat(t[1][i][1], t[1][i][2], [min(npl, first + pl)]),
        concat(t[1][i][2], t[1][i][3], [min(npl, first + pl)]),
        concat(t[1][i][3], t[1][i][0], [min(npl, first + pl)]),
        concat(t[1][i][0], t[1][i][1], [min(npl, last + pl)]),
        concat(t[1][i][1], t[1][i][2], [min(npl, last + pl)]),
        concat(t[1][i][2], t[1][i][3], [min(npl, last + pl)]),
        concat(t[1][i][3], t[1][i][0], [min(npl, last + pl)]), [t[1][i][0], t[1][i][1], t[1][i][2]],
        [t[1][i][0], t[1][i][1], t[1][i][3]]
      ];
      //echo (pl+cl,clip);
      color(un((C0 * abs(n[0]) + C1 * abs(n[1]) + C2 * abs(n[2]) + [1, 1, 1] * abs(n[2])) / 4))
      hull() {
        polyhedron(points, clip);
      };
    }
  }
  ///////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////
function cc(V, n = 1, curve = 0.61803398875) = n <= 0 ? V : n == 1 ?
  let (w = V) let (ed = cccheck(ccQS(ccQS(ccQS(ccQS(ccde(w[1], len(w[0]) - 1), 2), 1), 0), 1))) let (nf = ccnf(ed)) ccflip([ccnv(w, nf, curve), nf]) : let (w = cc(V, n - 1, curve)) let (ed = cccheck(ccQS(ccQS(ccQS(ccQS(ccde(w[1], len(w[0]) - 1), 2), 1), 0), 1))) let (nf = ccnf(ed)) ccflip([ccnv(w, nf, curve), nf]);

function ccnv(v, nf, curve) =
let (nv = [
  for (i = [0: len(v[1]) - 1])(v[0][v[1][i][0]] + v[0][v[1][i][1]] + v[0][v[1][i][2]]) / 3
]) let (sfv = [
  for (i = [0: len(v[0]) - 1]) avrg(ccfind(i, v[1], nv))
]) concat(lerp(v[0], sfv, curve), nv);

function ccnf(hf) = [
  for (i = [0: 1: len(hf) - 1])(i % 2) == 0 ? [hf[i][4], hf[(i + 1) % len(hf)][2], hf[i][2]] : [hf[i][4], hf[(i - 1) % len(hf)][2], hf[i][2]]
];

function ccde(faces, points) =
let (l = len(faces) - 1)[
  for (i = [0: l]) let (f = faces[i]) for (j = [0: len(f) - 1]) let (p = f[j], q = f[(j + 1) % len(f)])[min(p, q), max(p, q), i + points + 1, p, q] //noduplicates 
];

function cccheck(ed) = concat([
  for (i = [0: len(ed) - 1])
    if ((ed[i][0] == ed[i - 1][0] && ed[i][1] == ed[i - 1][1]) || (ed[i][0] == ed[i + 1][0] && ed[i][1] == ed[i + 1][1])) ed[i]
]);

function ccfind(lookfor, faces, nv) = [
  for (i = [0: len(faces) - 1])
    if (faces[i][0] == lookfor || faces[i][1] == lookfor || faces[i][2] == lookfor) nv[i]
];

function ccQS(arr, o) = !(len(arr) > 0) ? [] : let (pivot = arr[floor(len(arr) / 2)], lesser = [
  for (y = arr)
    if (y[o] < pivot[o]) y
], equal = [
  for (y = arr)
    if (y[o] == pivot[o]) y
], greater = [
  for (y = arr)
    if (y[o] > pivot[o]) y
]) concat(ccQS(lesser, o), equal, ccQS(greater, o));

function wave(w, a = 1, b = 1) = [
  [
    for (i = [0: len(w[0]) - 1]) let (x = w[0][i][0], y = w[0][i][1], z = w[0][i][2]) w[0][i] + [sin((y + z) * b) * a, sin((z + x) * b) * a, sin((x + y) * b) * a]
  ], w[1]
];

function ccweld(v) =
let (data = v[0])[v[0], [
  for (i = [0: len(v[1]) - 1]) let (index1 = v[1][i][0], index2 = v[1][i][1], index3 = v[1][i][2]) concat(search(data[index1][0], data), search(data[index2][0], data), search(data[index3][0], data, 1))
]];

function ccflip(w) = [w[0],
  [
    for (i = [0: len(w[1]) - 1])[w[1][i][0], w[1][i][2], w[1][i][1]]
  ]
];
///////////////////////////commonfunction s/////////////////////////////
function un(v) = v / max(len3(v), 0.000001) * 1;

function p2n(pa, pb, pc) =
let (u = pa - pb, v = pa - pc) un([u[1] * v[2] - u[2] * v[1], u[2] * v[0] - u[0] * v[2], u[0] * v[1] - u[1] * v[0]]);

function avrg(v) = sumv(v, max(0, len(v) - 1)) / len(v);

function lerp(start, end, bias) = (end * bias + start * (1 - bias));

function len3(v) = len(v) == 2 ? sqrt(pow(v[0], 2) + pow(v[1], 2)) : sqrt(pow(v[0], 2) + pow(v[1], 2) + pow(v[2], 2));

function rnd(a = 0, b = 1) = (rands(min(a, b), max(a, b), 1)[0]);

function rndc() = [rands(0, 1, 1)[0], rands(0, 1, 1)[0], rands(0, 1, 1)[0]];

function v3rnd(c = 1) = [rands(-1, 1, 1)[0] * c, rands(-1, 1, 1)[0] * c, rands(-1, 1, 1)[0]] * c;

function roundlist(v, r = 1) = len(v) == undef ? v - (v % r) : len(v) == 0 ? [] : [
  for (i = [0: len(v) - 1]) roundlist(v[i], r)
];

function limlist(v, r = 1) = [
  for (i = [0: len(v) - 1])[v[i][0], v[i][1], v[i][2]]
];