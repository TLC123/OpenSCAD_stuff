//Barricade by Torleif Ceder 2015 Creative Commons - Attribution - Share Alike

// preview[view:north east,tilt:top diagonal]
// settings
/*[Wall] */
WallHeight=40;//[1:50]
Width=50;//[10:50]
Base=2;//[1:0.01:4]
BaseHeight=10;//[5:20]
part=2;//[0:Arc,1:Square,2:Line,3:Crater,4:Point,5:Horseshoe]

mpv =[[[-3.15,-4.23],[1.8,-5.16],[-1.02,-5.37],[-3.02,-4.53],[2.86,-4.12],
[5.16,0.92],[-3.5,-3.68],[3.67,-4],[1.37,-5.12],[0.62,5.26],[4.79,2.23],[4.65,1.85],[3.84,-3.53],[2.73,-4.39],[4.09,-3.65],[0.45,-5.47],[4.97,-2.23],[4.76,1.8],[2.78,-4.32],[-3.91,-3.51],[-0.53,-5.12],[5.3,-0.57],[5.04,0.15],[5.11,0.45],[0.29,5.24],[-1.78,-5.17],[-2.8,-4.31],[-2.8,-5.15],[-2.15,-4.66],[1.86,4.87],[0.62,-5.31],[0.65,-5.41],[2.61,-4.51],[4.19,3.23],[-0.81,-5.31],[4.05,-3.68],[0.9,5.4],[4.2,2.89],[1.8,-4.68],[5.33,-0.47],[5.21,-1.55],[0.85,5.11],[2.68,-4.78],[5.08,-1.19],[2.67,4.74],[3.56,-4.16],[-1.52,-4.95],[-4.11,-3.6],[3.06,4.53],[2.38,4.48]]
 ,
[[4.09,-2.5],[4.82,4.61],[4.69,4.42],[2.46,4.04],[4.46,-1],[-2.58,-4.91],[-4.94,5],[0.31,-4.33],[4.83,-2.97],[4.75,4.95],[-4.2,1.77],[2.74,-4.14],[-4.19,-2.4],[4.88,-4.48],[-4.26,-3.98],[4.44,4.66],[-4.29,-4.31],[2.39,-4.61],[4.41,1.46],[4.08,-4.47],[4.61,0],[2.35,-4.45],[-4.07,4.58],[2.82,4.67],[-4.65,1.42],[-1.57,4.77],[-4.35,-1.3],[2.01,4.94],[-4.14,-0.89],[4.81,-4.45],[-4.04,3.99],[4.94,-4.16],[4.14,-0.72],[-1.84,-4.5],[-4.43,1.47],[4.7,-4.04],[-4.35,4.22],[4.39,-4.67],[4.66,-4.56],[-3.34,-4.5],[-4.86,-2.55],[3.62,-4.14],[4.68,-0.19],[4.49,4.43],[-4.59,3.85],[-2.18,4.7],[4.82,-2.3],[-4.19,4.21],[-4.35,-4.2],[-1.46,-4.59]]

 ,

[[7.43,-1.14],[-4.77,-1.48],[0.7,-1.26],[-7.2,-0.36],[-5.67,-1.5],[2.63,-1.02],[3.97,-0.66],[6.33,-0.07],[9.28,1.04],[-1.85,-0.75],[-1.61,-1.22],[2.08,-1.04],[-8.89,0.23],[-2.7,0.82],[-1.76,1.05],[2.36,0.17],[-8.99,0.9],[-5.84,1.02],[-4.75,-0.54],[6.07,-1],[1.97,0],[0.85,-0.91],[-7.32,-0.74],[-1.11,2.23],[-3.39,-0.67],[2.02,-0.88],[-6.89,-1.06],[-7.54,-1.16],[-4.95,0.98],[-6.69,0.37],[2.67,-0.97],[-6.94,-0.09],[9.36,1.31],[8.92,-0.06],[4.06,0.22],[4.17,1.11],[7.55,-0.83],[7.59,1.13],[6.67,1.4],[-4.79,0.14],[7.76,0.38],[-2.18,-0.35],[-6.51,1.42],[9.54,0.52],[-1.61,-0.85],[1.83,1.03],[-0.27,-1.26]]
,
[[-4.66,-1.79],[4.23,-2.67],[-5,0.26],[4.94,0.77],[0.84,4.93],[4.86,-1.23],[-4.23,-2.66],[-4.95,-0.67],[-0.56,-4.97],[2.99,-4.01],[1.43,-4.79],[4.29,-2.57],[0.31,5],[-2.75,-4.17],[-3.06,-3.95],[3.08,-3.94],[2.55,-4.29],[4.22,2.7],[3.27,-3.79],[0.49,4.98],[0.92,4.92],[2.49,-4.33],[4.84,1.27],[4.72,-1.67],[-1.12,4.88],[4.55,2.07],[-4.74,1.58],[-1.36,-4.81],[-4.84,1.24],[0.68,-4.95],[-2.72,-4.19],[1.71,4.7],[-0.4,4.99],[0.82,-4.92],[3.69,3.39],[-1.7,4.7],[4.74,-1.59],[2.96,4.03],[-3.03,3.98]]
,
[[4.44,0.36],[-3.53,4.36],[4.58,-4.49],[0.17,4.77],[4.75,1.48],[1.41,4.2],[4.7,3.01],[0.76,4.3],[4.74,0.61],[-1.32,4.05],[4.35,2.82],[-0.73,4.3],[4.92,4.8],[-2.02,4.23],[4.55,4.61],[-1.95,4.17],[4.64,-3.2],[0.13,4.98],[4.29,-1.97],[-4.29,4.76],[4.16,4.68],[-1.02,4.48],[4.88,-3.17],[-0.97,4.79],[4.51,-3.35],[0.44,4.49],[4.24,0.77],[2.33,4.74],[4.92,2.51],[-1.63,4.68],[4.48,4.59],[1.37,4.5],[4.81,-1.55],[3.08,4.54],[4.32,2.64],[-2.86,4.58],[4.52,-0.97],[2.02,4.91],[4.06,0.28],[-2.79,4.04],[4.51,0.59],[3.4,4.15],[4.17,2.44],[-2.84,4.83],[4.4,0.88],[-4.64,4.98],[4.58,-4.01],[0.25,4.02],[4.41,-2.35],[0.82,4.81]]

,
[[4.16,-1.29],[2.97,4.15],[4.33,-2.18],[-2.33,-4.6],[4.63,4.65],[0.53,4.81],[4.83,4.32],[-2.1,-4.51],[4.77,0.63],[-3.37,-4.8],[4.67,3.71],[-3.6,-4.4],[4.09,1.18],[1.25,-4.39],[4.18,3.38],[-4.31,-4.67],[4.47,4.1],[3.48,4.56],[4.26,-0.76],[2.61,-5],[4.09,1.47],[-2.58,4.64],[4.85,2.33],[0.22,4.86],[4.91,4.8],[3.44,-4.14],[4.51,-1.83],[-0.5,-4.3],[4.6,2.2],[4.6,4.81],[4.62,1.62],[-2.36,-4.67],[4.2,0.19],[1.93,4.5],[4.48,3.48],[-3.64,4.06],[4.02,0.61],[3.89,-4.18],[4.01,3.22],[0.19,4.09],[4.81,-2.81],[2.72,-4.23],[4.35,-4.11],[3.54,-4.09],[4.73,-3.49],[-4.27,-4.3],[4.05,-3],[-1.06,4.42],[4.49,0.98],[-0.16,-4.73]]

,
[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],[37],[37],[37]]];//[draw_polygon:40x40]


/*[Settings] */

Density=2;//[0.5:0.01:15]
TimberDensity=1;//[0.1:0.01:15]
Height=WallHeight;
Minsize=15;//[10:100]
Maxsize=25;//[10:100]
TimbLength=120;//[50:200]
TimbL=TimbLength ;
TimbW=15;//[5:40]
mul=25;//[5:50]
Wallstructure=0.8;//[0.1:0.01:3]


union(){
    
    
// wall
intersection(){
                
trimbox1();
for( i =[0:1/Density:-1+len(mpv[part])]) {
					
			
        
color([0.554,0.55,0.57]) 
    union(){           
translate([mul*mpv[part][i][0]+rands(-Width*0.25,Width*0.25,1)[0],mul*mpv[part][i][1] +rands(-Width*0.35,Width*0.35,1)[0],rands(-Height*0.25,Height,1)[0]]) scale(rands(Minsize,Maxsize*0.7,1)[0]) stone();
                    
translate([mul*mpv[part][i][0]+rands(-Width*0.7,Width*0.7,1)[0],mul*mpv[part][i][1] +rands(-Width*0.7,Width*0.7,1)[0],rands(-Height*0.5,Height*0.5,1)[0]])scale(rands(Minsize,Maxsize,1)[0]) stone();
    }
    
    }	
    
    // next i
    }
// -wall




//timber    
intersection(){
                
               color([0.54,0.25,0.07]) trimbox1();
        color([0.71,0.61,0.3
])
	for( i =[1:1/TimberDensity:-1+len(mpv[part])]) {
					
			
        
             
                    
                    
translate([mul*mpv[part][i][0]+rands(-Width*0.1,Width*0.1,1)[0],mul*mpv[part][i][1] +rands(-Width*0.1,Width*0.1,1)[0],rands(Height*0.5,Height*0.7,1)[0]])
rotate([rands(-55,55,1)[0],rands(-65,65,1)[0],rands(0,90,1)[0]]) translate([0,0,-TimbL*0.5])rotate([-90,0,0])resize([   rands(TimbW*0.3,TimbW*0.7,1)[0]
,   rands(TimbL*0.3,TimbL,1)[0]
,   rands(TimbW*0.7,TimbW,1)[0]
]) render(convexity = 5){timber();}
    
    }	
    
    // next i
    }
//-timber
    
// baseplate       
translate([0,0,-BaseHeight])
 color([0,0.16,0.05])intersection(){ 
     trimbox2();    color([0.254,0.8,0.27])union(){
                      

        
	for( i =[0:-1+len(mpv[part])]) {
    
        translate([mul*mpv[part][i][0],mul*mpv[part][i][1],0])
        rotate ([0,0,0+rands(0,90,1)[0]])
        resize([Width*Base,Width*Base,BaseHeight*1.5])
        intersection(){  sphere(center=true,0.5,$fn=7);
            translate([0,0,0.5])cube(1,center=true);}
        
		
				
            }}} 
    
            
        
// -baseplate  
            
// innerstructure       
     intersection(){
    translate([0,0,-BaseHeight])
    color([0.54,0.25,0.07]) trimbox1();
   color([0.54,0.25,0.07])  union(){
                      

        
	for( i =[0:-1+len(mpv[part])]) {
    
        translate([mul*mpv[part][i][0],mul*mpv[part][i][1],0])
        rotate ([0,0,0+rands(0,90,1)[0]])
        resize([Width*Wallstructure,Width*Wallstructure,Height*0.7])
        intersection(){sphere(center=true,0.5,$fn=7);
            translate([0,0,0.5]) cube(1,center=true);}
        
		
				
            }} 
    
        }}  
// -innerstructure       
    

module stone(){
   union(){
   
    resize([1,1,1])
       rotate([rands(0,360,1)[0],rands(0,360,1)[0],rands(0,360,1)[0]])
       
intersection(){
    
rotate([rands(0,360,1)[0],rands(0,360,1)[0],rands(0,360,1)[0]])
resize([rands(5,8,1)[0],rands(5,8,1)[0],rands(5,8,1)[0]])
    cube(center=true,1); 
    
    
rotate([rands(0,360,1)[0],rands(0,360,1)[0],rands(0,360,1)[0]])
resize([rands(5,8,1)[0],rands(5,8,1)[0],rands(5,8,1)[0]])
    cube(center=true,1);
        }
    
} }
module timber(){

color([0.54,0.25,0.07]) 
   difference(){
     color([0.54,0.25,0.07]) 
        rotate([90,0,0])rotate([0,0,45])        cylinder(1,$fn=floor(rands(4,6,1)[0]));
for(i=[1:rands(2,4,1)[0]]){
//translate([-rands(-.8,.8,1)[0],0,0])scale([1,rands(1,5,1)[0],1])rotate([0,0,45])cube([0.1,0.1,2],center=true);

translate([-rands(-.8,.8,1)[0],-1,0])scale([5,rands(1,5,1)[0],5])rotate([0,0,45])cube([0.1,0.1,2],center=true);}}

}

module trimbox1(){
    padding=Width*Base;
    
         translate([-10*mul-padding,-5*mul-padding,1])cube([20*mul+padding*2,10*mul+padding*2,WallHeight*2]);
    }
module trimbox2(){
    padding=Width*Base;
         translate([-10*mul-padding,-5*mul-padding,1])cube([20*mul+padding*2,10*mul+padding*2,BaseHeight]);
    }
//Barricade by Torleif Ceder 2015 Creative Commons - Attribution - Share Alike
